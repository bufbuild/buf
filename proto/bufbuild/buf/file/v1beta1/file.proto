// Copyright 2020 Buf Technologies Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package bufbuild.buf.file.v1beta1;

option go_package = "filev1beta1";

// FileAnnotation is an annotation for a specific file location.
message FileAnnotation {
  // path is the path of the file.
  //
  // This path must be relative and use '/' as the separator character .
  string path = 1;
  // start_line is the starting line.
  //
  // If the starting line is not known, this will be 0.
  uint32 start_line = 2;
  // start_column is the starting column.
  //
  // If the starting column is not known, this will be 0.
  uint32 start_column = 3;
  // end_line is the ending line.
  //
  // If the ending line is not known, this will be 0.
  // If the ending line is the same as the starting line, this will be explicitly set
  // to the same value as start_line.
  uint32 end_line = 4;
  // end_column is the ending column.
  //
  // If the ending column is not known, this will be 0.
  // If the ending column is the same as the starting column, this will be explicitly set
  // to the same value as start_column.
  uint32 end_column = 5;
  // type is the type of annotation, typically and ID representing a failure type.
  string type = 6;
  // message is the message of the annotation.
  string message = 7;
}
