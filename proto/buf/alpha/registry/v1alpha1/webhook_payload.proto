// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.alpha.registry.v1alpha1;

import "buf/alpha/registry/v1alpha1/repository_commit.proto";
import "buf/alpha/registry/v1alpha1/repository.proto";
import "buf/alpha/registry/v1alpha1/webhook.proto";
import "google/protobuf/timestamp.proto";

// WebhookListenerService represents a service implemented by a customer, to
// receive webhook events invocations from the BSR, if subscribed.
service WebhookListenerService {
  // ListenRepositoryPush listens when there is a repository push event.
  rpc ListenRepositoryPush(ListenRepositoryPushRequest) returns (ListenRepositoryPushResponse) {}
}

// ListenRepositoryPushRequest is the request sent to the customer's webhook
// listener service on a repository push event.
message ListenRepositoryPushRequest {
  // The timestamp of when the event happened.
  google.protobuf.Timestamp event_time = 1;
  // Te repository commit tied to the event.
  buf.alpha.registry.v1alpha1.WebhookEvent event = 2;
  // Te repository commit tied to the event.
  buf.alpha.registry.v1alpha1.RepositoryCommit repository_commit = 3;
  // Te repository that was pushed.
  buf.alpha.registry.v1alpha1.Repository repository = 4;
}

// ListenRepositoryPushResponse empty response for successful invocations
// receipts.
message ListenRepositoryPushResponse {}
