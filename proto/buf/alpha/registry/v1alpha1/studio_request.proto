// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.alpha.registry.v1alpha1;

import "google/protobuf/timestamp.proto";

// StudioRequestService exposes the functionality to manage favorited Requests
// from Studio.
service StudioRequestService {
  // CreateStudioRequest registers a favorite Studio requests to the caller's
  // BSR profile.
  rpc CreateStudioRequest(CreateStudioRequestRequest) returns (CreateStudioRequestResponse) {}
  // DeleteStudioRequest removes a favorite Studio request from the caller's BSR
  // profile.
  rpc DeleteStudioRequest(DeleteStudioRequestRequest) returns (DeleteStudioRequestResponse) {}
  // ListStudioRequests shows the caller's favorited requests.
  rpc ListStudioRequests(ListStudioRequestsRequest) returns (ListStudioRequestsResponse) {}
}

// CreateStudioRequestRequest is the proto request representation of the
// CreateStudioRequest method. IDs and timestamps are automatically generated,
// BSR Repository information is taken from the `repository_id`, and the
// `author` is taken from the request authentication.
message CreateStudioRequestRequest {
  // BSR repository ID this request is linked to.
  string repository_id = 1;
  // The friendly name of this request.
  string name = 2;
  // The target base URL of this request.
  string target_base_url = 3;
  // The target service name as defined in the BSR repository.
  string service = 4;
  // The target RPC method name as defined in the BSR repository.
  string method = 5;
  // The request body as defined in Studio.
  string request_body = 6;
  // The request headers as defined in Studio.
  map<string, string> request_headers = 7;
  // The response body as seen in Studio.
  string response_body = 8;
  // The response headers as seen in Studio.
  map<string, string> response_headers = 9;
}

// CreateStudioRequestResponse is the proto response representation of the
// CreateStudioRequest method.
message CreateStudioRequestResponse {
  // Created Studio Request.
  StudioRequest request = 1;
}

// DeleteStudioRequestRequest is the proto request representation of the
// DeleteStudioRequest method.
message DeleteStudioRequestRequest {
  // The Studio Request ID that will be deleted.
  string id = 1;
}

// DeleteStudioRequestResponse is the proto response representation of the
// DeleteStudioRequest method.
message DeleteStudioRequestResponse {}

// ListStudioRequestsRequest is the proto request representation of the
// ListStudioRequests method.
message ListStudioRequestsRequest {
  // The page token for paginating.
  string page_token = 1;
}

// ListStudioRequestsResponse is the proto response representation of the
// ListStudioRequests method.
message ListStudioRequestsResponse {
  // The list of requests in the current page.
  repeated StudioRequest requests = 1;
  // The requests' next page token.
  string next_page_token = 2;
}

// StudioRequest represents a saved request in Studio, that is synced to a BSR
// user's profile.
message StudioRequest {
  // The ID of this Studio request.
  string id = 1;
  // The request creation timestamp.
  google.protobuf.Timestamp create_time = 2;
  // The request last updated timestamp.
  google.protobuf.Timestamp update_time = 3;
  // User ID who created and saved this request.
  string author = 4;
  // BSR repository ID this request is linked to.
  string repository_id = 5;
  // The friendly name of this request.
  string name = 6;
  // The target base URL of this request.
  string target_base_url = 7;
  // The BSR repository owner name (user or oganization).
  string repository_owner = 8;
  // The BSR repository name.
  string repository_name = 9;
  // The target service name as defined in the BSR repository.
  string service = 10;
  // The target RPC method name as defined in the BSR repository.
  string method = 11;
  // The request body as defined in Studio.
  string request_body = 12;
  // The request headers as defined in Studio.
  map<string, string> request_headers = 13;
  // The response body as seen in Studio.
  string response_body = 14;
  // The response headers as seen in Studio.
  map<string, string> response_headers = 15;
}
