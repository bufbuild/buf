// Copyright 2020-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.alpha.registry.v1alpha1;

import "google/protobuf/timestamp.proto";

message RepositoryBranch {
  // The name of the repository branch.
  string name = 1;
  // The name of the author who pushed the latest commit to this branch.
  string latest_git_commit_author_name = 2;
  // The last update time of the branch.
  google.protobuf.Timestamp update_time = 3;
}

// RepositoryBranchService is the Repository branch service.
service RepositoryBranchService {
  // ListRepositoryBranchs lists the repository branches associated with a Repository.
  rpc ListRepositoryBranches(ListRepositoryBranchesRequest) returns (ListRepositoryBranchesResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }
}

message ListRepositoryBranchesRequest {
  // The name of the owner of the repository.
  string owner_name = 1;
  // The name of the repository whose branches should be listed.
  string repository_name = 2;
  uint32 page_size = 3;
  // The first page is returned if this is empty.
  string page_token = 4;
  bool reverse = 5;
}

message ListRepositoryBranchesResponse {
  repeated RepositoryBranch repository_branches = 1;
  // There are no more pages if this is empty.
  string next_page_token = 2;
}
