// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.alpha.registry.v1alpha1;

import "google/protobuf/timestamp.proto";

// RecommendedRepository is the information about a repository needed to link to
// its owner page.
message RecommendedRepository {
  string owner = 1;
  string name = 2;
  google.protobuf.Timestamp create_time = 3;
  string description = 4;
  string repository_id = 5;
}

// RecommendedTemplate is the information needed to recommend a template and link
// to its owner page.
message RecommendedTemplate {
  string owner = 1;
  string name = 2;
  string description = 3;
  string template_id = 4;
}

// SetRecommendedRepository is the information needed to configure a repository recommendation
message SetRecommendedRepository {
  string repository_id = 1;
  string description = 2;
}

// SetRecommendedTemplate is the information needed to configure a template recommendation
message SetRecommendedTemplate {
  string template_id = 1;
  string description = 2;
}

// RecommendationService is the recommendation service.
service RecommendationService {
  // RecommendedRepositories returns a list of recommended repositories.
  rpc RecommendedRepositories(RecommendedRepositoriesRequest) returns (RecommendedRepositoriesResponse);
  // RecommendedTemplates returns a list of recommended templates.
  rpc RecommendedTemplates(RecommendedTemplatesRequest) returns (RecommendedTemplatesResponse);
  // ListRecommendedRepositories returns a list of recommended repositories that user have access to.
  rpc ListRecommendedRepositories(ListRecommendedRepositoriesRequest) returns (ListRecommendedRepositoriesResponse);
  // ListRecommendedTemplates returns a list of recommended templates that user have access to.
  rpc ListRecommendedTemplates(ListRecommendedTemplatesRequest) returns (ListRecommendedTemplatesResponse);
  // SetRecommendedRepositories set the list of repository recommendations in the server.
  rpc SetRecommendedRepositories(SetRecommendedRepositoriesRequest) returns (SetRecommendedRepositoriesResponse);
  // SetRecommendedTemplates set the list of template recommendations in the server.
  rpc SetRecommendedTemplates(SetRecommendedTemplatesRequest) returns (SetRecommendedTemplatesResponse);
}

message RecommendedRepositoriesRequest {}

message RecommendedRepositoriesResponse {
  repeated RecommendedRepository repositories = 1;
}

message RecommendedTemplatesRequest {}

message RecommendedTemplatesResponse {
  repeated RecommendedTemplate templates = 1;
}

message ListRecommendedRepositoriesRequest {}

message ListRecommendedRepositoriesResponse {
  repeated RecommendedRepository repositories = 1;
}

message ListRecommendedTemplatesRequest {}

message ListRecommendedTemplatesResponse {
  repeated RecommendedTemplate templates = 1;
}

message SetRecommendedRepositoriesRequest {
  repeated SetRecommendedRepository repositories = 1;
}

message SetRecommendedRepositoriesResponse {}

message SetRecommendedTemplatesRequest {
  repeated SetRecommendedTemplate templates = 1;
}

message SetRecommendedTemplatesResponse {}
