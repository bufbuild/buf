// Copyright 2020-2021 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-apiclient. DO NOT EDIT.

package registryv1alpha1apiclient

import (
	context "context"
	registryv1alpha1api "github.com/bufbuild/buf/internal/gen/proto/api/buf/alpha/registry/v1alpha1/registryv1alpha1api"
)

// Provider provides all the types in registryv1alpha1apiclient.
type Provider interface {
	DownloadServiceProvider
	OrganizationServiceProvider
	PushServiceProvider
	RepositoryBranchServiceProvider
	RepositoryCommitServiceProvider
	RepositoryServiceProvider
	ResolveServiceProvider
	UserServiceProvider
}

// DownloadServiceProvider provides a client-side DownloadService for an address.
type DownloadServiceProvider interface {
	NewDownloadService(ctx context.Context, address string) (registryv1alpha1api.DownloadService, error)
}

// OrganizationServiceProvider provides a client-side OrganizationService for an address.
type OrganizationServiceProvider interface {
	NewOrganizationService(ctx context.Context, address string) (registryv1alpha1api.OrganizationService, error)
}

// PushServiceProvider provides a client-side PushService for an address.
type PushServiceProvider interface {
	NewPushService(ctx context.Context, address string) (registryv1alpha1api.PushService, error)
}

// RepositoryBranchServiceProvider provides a client-side RepositoryBranchService for an address.
type RepositoryBranchServiceProvider interface {
	NewRepositoryBranchService(ctx context.Context, address string) (registryv1alpha1api.RepositoryBranchService, error)
}

// RepositoryCommitServiceProvider provides a client-side RepositoryCommitService for an address.
type RepositoryCommitServiceProvider interface {
	NewRepositoryCommitService(ctx context.Context, address string) (registryv1alpha1api.RepositoryCommitService, error)
}

// RepositoryServiceProvider provides a client-side RepositoryService for an address.
type RepositoryServiceProvider interface {
	NewRepositoryService(ctx context.Context, address string) (registryv1alpha1api.RepositoryService, error)
}

// ResolveServiceProvider provides a client-side ResolveService for an address.
type ResolveServiceProvider interface {
	NewResolveService(ctx context.Context, address string) (registryv1alpha1api.ResolveService, error)
}

// UserServiceProvider provides a client-side UserService for an address.
type UserServiceProvider interface {
	NewUserService(ctx context.Context, address string) (registryv1alpha1api.UserService, error)
}
