// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bufbuild/buf/file/v1beta1/file.proto

package filev1beta1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// File is an individual file.
type File struct {
	// path is the path of the file.
	//
	// This path must be relative and use '/' as the separator character .
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// content is the file content.
	//
	// This can potentially be empty.
	Content              []byte   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e66da8bbfd29a12, []int{0}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *File) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// FileSet is a set of files.
type FileSet struct {
	// files are the files that make up the file set.
	//
	// All files must have unique paths for a FileSet to be valid.
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileSet) Reset()         { *m = FileSet{} }
func (m *FileSet) String() string { return proto.CompactTextString(m) }
func (*FileSet) ProtoMessage()    {}
func (*FileSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e66da8bbfd29a12, []int{1}
}

func (m *FileSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileSet.Unmarshal(m, b)
}
func (m *FileSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileSet.Marshal(b, m, deterministic)
}
func (m *FileSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileSet.Merge(m, src)
}
func (m *FileSet) XXX_Size() int {
	return xxx_messageInfo_FileSet.Size(m)
}
func (m *FileSet) XXX_DiscardUnknown() {
	xxx_messageInfo_FileSet.DiscardUnknown(m)
}

var xxx_messageInfo_FileSet proto.InternalMessageInfo

func (m *FileSet) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

// FileAnnotation is an annotation for a specific file location.
type FileAnnotation struct {
	// path is the path of the file.
	//
	// This path must be relative and use '/' as the separator character .
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// start_line is the starting line.
	//
	// If the starting line is not known, this will be 0.
	StartLine uint32 `protobuf:"varint,2,opt,name=start_line,json=startLine,proto3" json:"start_line,omitempty"`
	// start_column is the starting column.
	//
	// If the starting column is not known, this will be 0.
	StartColumn uint32 `protobuf:"varint,3,opt,name=start_column,json=startColumn,proto3" json:"start_column,omitempty"`
	// end_line is the ending line.
	//
	// If the ending line is not known, this will be 0.
	// If the ending line is the same as the starting line, this will be explicitly set
	// to the same value as start_line.
	EndLine uint32 `protobuf:"varint,4,opt,name=end_line,json=endLine,proto3" json:"end_line,omitempty"`
	// end_column is the ending column.
	//
	// If the ending column is not known, this will be 0.
	// If the ending column is the same as the starting column, this will be explicitly set
	// to the same value as start_column.
	EndColumn uint32 `protobuf:"varint,5,opt,name=end_column,json=endColumn,proto3" json:"end_column,omitempty"`
	// type is the type of annotation, typically and ID representing a failure type.
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// message is the message of the annotation.
	Message              string   `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileAnnotation) Reset()         { *m = FileAnnotation{} }
func (m *FileAnnotation) String() string { return proto.CompactTextString(m) }
func (*FileAnnotation) ProtoMessage()    {}
func (*FileAnnotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e66da8bbfd29a12, []int{2}
}

func (m *FileAnnotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileAnnotation.Unmarshal(m, b)
}
func (m *FileAnnotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileAnnotation.Marshal(b, m, deterministic)
}
func (m *FileAnnotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileAnnotation.Merge(m, src)
}
func (m *FileAnnotation) XXX_Size() int {
	return xxx_messageInfo_FileAnnotation.Size(m)
}
func (m *FileAnnotation) XXX_DiscardUnknown() {
	xxx_messageInfo_FileAnnotation.DiscardUnknown(m)
}

var xxx_messageInfo_FileAnnotation proto.InternalMessageInfo

func (m *FileAnnotation) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileAnnotation) GetStartLine() uint32 {
	if m != nil {
		return m.StartLine
	}
	return 0
}

func (m *FileAnnotation) GetStartColumn() uint32 {
	if m != nil {
		return m.StartColumn
	}
	return 0
}

func (m *FileAnnotation) GetEndLine() uint32 {
	if m != nil {
		return m.EndLine
	}
	return 0
}

func (m *FileAnnotation) GetEndColumn() uint32 {
	if m != nil {
		return m.EndColumn
	}
	return 0
}

func (m *FileAnnotation) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FileAnnotation) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*File)(nil), "bufbuild.buf.file.v1beta1.File")
	proto.RegisterType((*FileSet)(nil), "bufbuild.buf.file.v1beta1.FileSet")
	proto.RegisterType((*FileAnnotation)(nil), "bufbuild.buf.file.v1beta1.FileAnnotation")
}

func init() {
	proto.RegisterFile("bufbuild/buf/file/v1beta1/file.proto", fileDescriptor_7e66da8bbfd29a12)
}

var fileDescriptor_7e66da8bbfd29a12 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x50, 0xbb, 0x4e, 0xeb, 0x40,
	0x10, 0x95, 0x6f, 0x9c, 0xf8, 0x66, 0x92, 0x50, 0x6c, 0xb5, 0x29, 0x22, 0x8c, 0x45, 0xe1, 0xca,
	0x56, 0x78, 0xf4, 0x3c, 0x24, 0x2a, 0x2a, 0xd3, 0xd1, 0x20, 0x6f, 0x3c, 0x86, 0x95, 0x9c, 0x59,
	0x2b, 0x1e, 0x23, 0xf1, 0x93, 0x7c, 0x13, 0xda, 0xb1, 0xdd, 0x41, 0xb7, 0xe7, 0x35, 0x7b, 0x66,
	0xe0, 0xd2, 0xf4, 0xb5, 0xe9, 0x6d, 0x53, 0xe5, 0xa6, 0xaf, 0xf3, 0xda, 0x36, 0x98, 0x7f, 0xee,
	0x0d, 0x72, 0xb9, 0x17, 0x90, 0xb5, 0x27, 0xc7, 0x4e, 0x6d, 0x27, 0x57, 0x66, 0xfa, 0x3a, 0x13,
	0x61, 0x74, 0x25, 0x37, 0x10, 0x3e, 0xd9, 0x06, 0x95, 0x82, 0xb0, 0x2d, 0xf9, 0x43, 0x07, 0x71,
	0x90, 0x2e, 0x0b, 0x79, 0x2b, 0x0d, 0xd1, 0xc1, 0x11, 0x23, 0xb1, 0xfe, 0x17, 0x07, 0xe9, 0xba,
	0x98, 0x60, 0x72, 0x07, 0x91, 0x4f, 0xbd, 0x20, 0xab, 0x5b, 0x98, 0xfb, 0x81, 0x9d, 0x0e, 0xe2,
	0x59, 0xba, 0xba, 0x3a, 0xcf, 0xfe, 0xfc, 0x2b, 0xf3, 0x91, 0x62, 0x70, 0x27, 0xdf, 0x01, 0x9c,
	0x79, 0x7c, 0x4f, 0xe4, 0xb8, 0x64, 0xeb, 0xe8, 0xd7, 0x0a, 0x3b, 0x80, 0x8e, 0xcb, 0x13, 0xbf,
	0x35, 0x96, 0x50, 0x5a, 0x6c, 0x8a, 0xa5, 0x30, 0xcf, 0x96, 0x50, 0x5d, 0xc0, 0x7a, 0x90, 0x0f,
	0xae, 0xe9, 0x8f, 0xa4, 0x67, 0x62, 0x58, 0x09, 0xf7, 0x28, 0x94, 0xda, 0xc2, 0x7f, 0xa4, 0x6a,
	0xc8, 0x87, 0x22, 0x47, 0x48, 0x95, 0xa4, 0x77, 0x00, 0x5e, 0x1a, 0xb3, 0xf3, 0x61, 0x38, 0x52,
	0x35, 0x26, 0x15, 0x84, 0xfc, 0xd5, 0xa2, 0x5e, 0x0c, 0x7d, 0xfc, 0xdb, 0x9f, 0xe4, 0x88, 0x5d,
	0x57, 0xbe, 0xa3, 0x8e, 0x84, 0x9e, 0xe0, 0xc3, 0xe6, 0x75, 0xe5, 0x37, 0x1b, 0x77, 0x35, 0x0b,
	0xb9, 0xfc, 0xf5, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x47, 0x21, 0x13, 0x4a, 0xa1, 0x01, 0x00,
	0x00,
}
