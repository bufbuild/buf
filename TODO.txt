- last commands:
  - export
  - format
  - generate
  - push
  - sync

- new digest format - figure out with API
- new buf migrate command

- port tests from:
  - bufmodule
  - bufmoduleref
  - bufmoduletesting
  - bufmodulebuild
  - bufmoduleconfig
  - buflock
  - bufconfig

- lots of QA, especially around workspace file searching, target paths
- figure out what to do about AllowNotExist and how it fits in
- document behavior of file searching, config override
- fix tamper-proofing
- go through all todos
- `buf mod init` should create a v2 buf.yaml.
- Is `buf build` supposed to call the API when there is already a buf.lock? On the same
  directory, the released version (main) doesn't make that API call but `bufmod` calls
  `buf.registry.module.v1beta1.CommitService/GetCommitNodes`. Is it for computing digest? Or is it because the buf.lock is in v1?

- Migrate buf.work.yaml, buf.yaml and buf.lock
  - It would be nice if the bufconfig.File exposes a Path() method. Or a path() method and
    I can move bufmigrate into bufconfig.
  - A strategy to resolve dependencies for buf.lock
  - A strategy to resolve dependencies declared. i.e. foo depends on common:commit_1,
    bar depends on common:commit_2 and baz depends on common (without pinning a commit).
  - Refine migration behavior and flags.
  - Relative paths in lint/breaking ignore rules (and similar fields requiring paths), what
    are they relative to? Their module root or the workspace root?
  - Group lint rules, right now lint rules are expanded to a list of individual rules.
    - Going from v1beta1 there are many changes to the rules.
    - Going from v1 to v2, the only change is that PACKAGE_NO_IMPORT_CYCLE is added to MINIMAL, BASIC, DEFAULT.
  - Breaking rules:
    - FIELD_SAME_TYPE from v1beta1 is split into 3 rules in v1: FIELD_SAME_TYPE,
      FIELD_WIRE_COMPATIBLE_TYPE, FIELD_WIRE_JSON_COMPATIBLE_TYPE.
    - Rule `FILE_SAME_PACKAGE` has been added to PACKAGE, WIRE and WIRE_JSON in v1.

NOTE: We are not allowing cross-workspace finding for include_package_files=true

- Decide whether or not excludes and ignores should be relative to module directory
