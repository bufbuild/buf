version: "2"
linters:
  default: none
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - copyloopvar
    - decorder
    - dogsled
    - errcheck
    - exhaustruct
    - forbidigo
    - forcetypeassert
    - gochecknoinits
    - goheader
    - gomodguard
    - goprintffuncname
    - gosec
    - govet
    - grouper
    - importas
    - ineffassign
    - loggercheck
    - makezero
    - mirror
    - misspell
    - nakedret
    - nilerr
    - nolintlint
    - nosprintfhostport
    - paralleltest
    - predeclared
    - promlinter
    - reassign
    - rowserrcheck
    - staticcheck
    - unconvert
    - unused
    - wastedassign
    - whitespace
  settings:
    errcheck:
      check-type-assertions: true
    forbidigo:
      forbid:
        # Use private/pkg/thread.Parallelize
        - pattern: ^errgroup\.
        # Use private/pkg/execext
        - pattern: ^exec\.Cmd$
        - pattern: ^exec\.Command$
        - pattern: ^exec\.CommandContext$
        # os.Rename does not work across filesystem boundaries
        # See https://github.com/bufbuild/buf/issues/639
        - pattern: ^os\.Rename$
        # Use private/pkg/osext.Getwd
        - pattern: ^os\.Getwd$
        # Use private/pkg/osext.Chdir
        - pattern: ^os\.Chdir$
        # Ban debug statements
        - pattern: ^fmt\.Print$
        - pattern: ^log\.
        - pattern: ^print$
        - pattern: ^println$
        # Use private/pkg/protoencoding Marshalers and Unmarshalers
        - pattern: ^(proto|prototext|protojson|protoyaml).Marshal$
        - pattern: ^(proto|prototext|protojson|protoyaml).Unmarshal$
        - pattern: ^(proto|prototext|protojson|protoyaml).MarshalOptions$
        - pattern: ^(proto|prototext|protojson|protoyaml).UnmarshalOptions$
    govet:
      enable:
        - nilness
    importas:
      alias:
        - pkg: github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/image/v1
          alias: imagev1
        - pkg: github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/module/v1
          alias: modulev1
        - pkg: github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1
          alias: registryv1alpha1
    nolintlint:
      require-explanation: true
      require-specific: true
      allow-unused: false
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      # We didn't turn on exhaustruct historically, but we really want to make sure it is turned on
      # for this file, as we do conversion between v1beta1 and v1 registry-proto types.
      - linters:
          - exhaustruct
        path-except: private/bufpkg/bufmodule/bufmoduleapi/convert.go
      # G101 checks for hardcoded credentials, and the variables named "*Password*
      # trip this off.
      - linters:
          - gosec
        path: private/buf/bufcli/env.go
        text: "G101:"
      # G404 checks for use of the ordinary non-CPRNG.
      - linters:
          - gosec
        path: private/buf/buflsp/progress.go
        text: "G404:"
      # G115 checks for use of truncating conversions.
      - linters:
          - gosec
        path: private/buf/buflsp/file.go
        text: "G115:"
      # G115 checks for use of truncating conversions.
      - linters:
          - gosec
        path: private/buf/buflsp/image.go
        text: "G115:"
      # G115 checks for use of truncating conversions.
      - linters:
          - gosec
        path: private/buf/buflsp/report.go
        text: "G115:"
      # G115 checks for use of truncating conversions.
      - linters:
          - gosec
        path: private/buf/buflsp/server.go
        text: "G115:"
      # G115 checks for use of truncating conversions.
      - linters:
          - gosec
        path: private/buf/buflsp/symbol.go
        text: "G115:"
      # Type must implement an interface whose methods do not accept context. But this
      # implementation makes RPC calls, which need a context. So we allow creator of the
      # type to provide a context at value creation (instead of using context.Background()).
      - linters:
          - containedctx
        path: private/buf/bufcurl/reflection_resolver.go
      # We verify manually so that we can emit verbose output while doing so.
      - linters:
          - gosec
        path: private/buf/bufcurl/tls.go
        text: "G402:"
      # This test shouldn't run in parallel as it needs osext.Getwd.
      - linters:
          - paralleltest
        path: private/buf/buffetch/internal/reader_test.go
        text: missing the call to method parallel
      # Parallelizing TestPlainPostHandlerTLS and TestPlainPostHandlerH2C
      # makes this test flaky.
      - linters:
          - paralleltest
        path: private/buf/bufstudioagent/bufstudioagent_test.go
        text: missing the call to method parallel
      # TestWorkspaceArchiveDir, TestWorkspaceWithInvalidArchivePathFail
      # and TestWorkspaceWithInvalidArchiveAbsolutePathFail cannot run in parallel
      # because they all call createZipFromDir on the same path, writing to the same file.
      - linters:
          - paralleltest
        path: private/buf/cmd/buf/workspace_test.go
        text: missing the call to method parallel
      # This is a legacy usage of os.Getwd we're not bothering to port yet.
      - linters:
          - forbidigo
        path: private/buf/cmd/buf/command/alpha/protoc/protoc_test.go
        text: os.Getwd
      # One function call doesn't care about most of the returned destructured values. The
      # dogsled linter complains about it. (Value of this linter is unclear...)
      - linters:
          - dogsled
        path: private/buf/cmd/buf/command/curl/curl.go
      # This is a legacy usage of os.Getwd we're not bothering to port yet.
      - linters:
          - forbidigo
        path: private/buf/cmd/buf/command/generate/generate_test.go
        text: os.Getwd
      # we actually want to use this init to create a protovalidate.Validator
      - linters:
          - gochecknoinits
        path: private/bufpkg/bufcas/proto.go
      # we actually want to use init here
      - linters:
          - gochecknoinits
        path: private/bufpkg/bufconfig/module_config.go
      # We don't need a cryptographically secure RNG for these tests, and a
      # deterministic RNG is actually nice for test repeatability.
      - linters:
          - gosec
        path: private/bufpkg/bufimage/bufimageutil/.*_test\.go
        text: "G404:"
      # This test shouldn't run in parallel as it allocates a lot of memory.
      - linters:
          - paralleltest
        path: private/bufpkg/bufimage/build_image_unix_test.go
        text: missing the call to method parallel
      # we actually want to embed a context here
      - linters:
          - containedctx
        path: private/bufpkg/bufimage/parser_accessor_handler.go
      # we actually want to embed a context here
      - linters:
          - containedctx
        path: private/bufpkg/bufmodule/module.go
      # we actually want to embed a context here
      - linters:
          - containedctx
        path: private/bufpkg/bufmodule/module_set_builder.go
      # we actually want to embed a context here
      - linters:
          - containedctx
        path: private/pkg/execext/process.go
      # we actually want to use init here
      - linters:
          - gochecknoinits
        path: private/bufpkg/bufmodule/paths.go
      # we want to use errgroup here
      - linters:
          - forbidigo
        path: private/bufpkg/bufremoteplugin/bufremoteplugindocker/docker.go
        text: use of `errgroup
      # this is one of two files we want to allow exec.Cmd functions in
      - linters:
          - forbidigo
        path: private/pkg/execext/execext.go
      # this is one of two files we want to allow exec.Cmd functions in
      - linters:
          - forbidigo
        path: private/pkg/execext/process.go
      # G204 checks that exec.Command is not called with non-constants.
      - linters:
          - gosec
        path: private/pkg/execext/execext.go
        text: "G204:"
      # We should be able to use net/http/cgi in a unit test, in addition the CVE mentions
      # only versions of go < 1.6.3 are affected.
      - linters:
          - gosec
        path: private/pkg/git/git_test.go
        text: "G504:"
      # netrc/internal is a library largely copied in from an external repository with attribution.
      # We try to make minimal edits.
      - linters:
          - wastedassign
        path: private/pkg/netrc/internal/internal.go
      # We cache os.Getwd in osext, osext is the entrypoint.
      - linters:
          - forbidigo
        path: private/pkg/osext/osext.go
        text: os.Getwd
      # We cache os.Getwd in osext, osext has a Chdir that clears the cache.
      - linters:
          - forbidigo
        path: private/pkg/osext/osext.go
        text: os.Chdir
      # protoencoding calls detrand.Disable via go:linkname and and init function. See the comments
      # in the file for more details.
      - linters:
          - gochecknoinits
        path: private/pkg/protoencoding/detrand.go
      # headers.go has casts with values from contexts that should fail if there
      # is no error, but it would be very unidiomatic to return an error from
      # the functions that do these casts, and we completely control the
      # context values within this file
      - linters:
          - errcheck
        path: private/pkg/rpc/headers.go
      # we use os.Rename here to rename files in the same directory
      # This is safe (we aren't traversing filesystem boundaries).
      - linters:
          - forbidigo
        path: private/pkg/storage/storageos/bucket.go
        text: os.Rename
      # we actually want to embed a context here
      - linters:
          - containedctx
        path: private/pkg/transport/grpc/grpcclient/client_conn_provider.go
      # we actually want to use errgroup when starting an HTTP server
      - linters:
          - forbidigo
        path: private/pkg/transport/http/httpserver/httpserver.go
      - linters:
          - staticcheck
        text: "ST1005:"
      # we actually want to use this init
      - linters:
          - gochecknoinits
        path: private/usage/usage.go
      # We deprecated all the definitions in plugin.proto but we still implement them.
      - linters:
          - staticcheck
        text: buf/alpha/registry/v1alpha1/plugin.proto is marked as deprecated
      # We deprecated all the definitions in generate.proto but we still implement them.
      - linters:
          - staticcheck
        text: buf/alpha/registry/v1alpha1/generate.proto is marked as deprecated
      # We need to handle this field in descriptor.proto.
      - linters:
          - staticcheck
        text: GetDeprecatedLegacyJsonFieldConflicts is deprecated
      # This greatly simplifies creation of descriptors, and it's safe enough since
      # it's just test code.
      - linters:
          - forcetypeassert
        path: private/bufpkg/bufimage/source_retention_options_test\.go
      # The LsModules tests call chdir and cannot be parallelized.
      - linters:
          - paralleltest
        path: private/buf/cmd/buf/buf_test.go
        text: LsModules
      # G101 checks for hardcoded credentials, and the variables named "*Token*
      # trip this off.
      - linters:
          - gosec
        path: private/pkg/oauth2/device.go
        text: "G101:"
      # G115 checks for integer overflow from integer conversions. There are known false
      # positives from the check (https://github.com/securego/gosec/issues/1212) that are
      # actively being worked on. Each exemption below is a false positive or for a safe operation,
      # such as parsing indices from descriptors and/or images.
      # Loop index conversion to uint64.
      - linters:
          - gosec
        path: private/buf/bufgen/features.go
        text: "G115:"
      # Converting result from utf8.RuneCountInString to uint64.
      - linters:
          - gosec
        path: private/bufpkg/bufcheck/bufcheckserver/internal/buflintvalidate/field.go
        text: "G115:"
      # PluginReference revision is validated with a bounds check at construction time.
      - linters:
          - gosec
        path: private/bufpkg/bufremoteplugin/bufremoteplugin.go
        text: "G115:"
      # A bounds check has been added for int32 -> uint32 conversion this is being flagged
      # as a false positive.
      - linters:
          - gosec
        path: private/buf/bufcurl/reflection_resolver.go
        text: "G115:"
      # bufprotosource converts indices to int32 to form the source path. Since it is parsing
      # from the fileDescriptor set, the operation should be safe.
      - linters:
          - gosec
        path: private/bufpkg/bufprotosource/paths.go
        text: "G115:"
      # Bounds checks have been added with assertion statements to ensure safe int -> int32
      # conversions, this is a false positive.
      - linters:
          - gosec
        path: private/bufpkg/bufprotosource/option_extension_descriptor_test.go
        text: "G115:"
      # This converts results from strconv.ParseInt with the bit size set to 32 to int32,
      # so it should be a safe conversion, this is a false positive.
      - linters:
          - gosec
        path: private/buf/bufprotopluginexec/version.go
        text: "G115:"
      # This checks the cel constraints from an Image, and converts loop indices to int32
      # to set the source path for the location, this operation should be safe.
      - linters:
          - gosec
        path: private/bufpkg/bufcheck/bufcheckserver/internal/buflintvalidate/cel.go
        text: "G115:"
      # No obvious deprecated replacement.
      - linters:
          - staticcheck
        path: private/pkg/protoencoding/reparse_extensions_test.go
        text: "SA1019:"
      # Allow marshal and unmarshal functions in protoencoding only
      - linters:
          - forbidigo
        path: private/pkg/protoencoding
        text: proto.Marshal
      - linters:
          - forbidigo
        path: private/pkg/protoencoding
        text: proto.Unmarshal
      - linters:
          - forbidigo
        path: private/pkg/protoencoding
        text: protojson.Marshal
      - linters:
          - forbidigo
        path: private/pkg/protoencoding
        text: protojson.Unmarshal
      - linters:
          - forbidigo
        path: private/pkg/protoencoding
        text: protoyaml.Marshal
      - linters:
          - forbidigo
        path: private/pkg/protoencoding
        text: protoyaml.Unmarshal
      - linters:
          - forbidigo
        path: private/pkg/protoencoding
        text: prototext.Marshal
      - linters:
          - forbidigo
        path: private/pkg/protoencoding
        text: prototext.Unmarshal
      # This checks the cel constraints for predefined rules from an Image, and converts loop indices to int32
      # to set the source path for the location, this operation should be safe.
      - linters:
          - gosec
        path: private/bufpkg/bufcheck/bufcheckserver/internal/buflintvalidate/predefined_rules.go
        text: "G115:"
formatters:
  enable:
    - gci
    - gofmt
  exclusions:
    generated: lax
