linters-settings:
  errcheck:
    check-type-assertions: true
  forbidigo:
    forbid:
      # Use private/pkg/thread.Parallelize
      - '^errgroup\.'
      # Use private/pkg/command.Runner
      - '^exec\.Cmd$'
      - '^exec\.Command$'
      - '^exec\.CommandContext$'
      # os.Rename does not work across filesystem boundaries
      # See https://github.com/bufbuild/buf/issues/639
      - '^os\.Rename$'
      # Use private/pkg/osext.Getwd
      - '^os\.Getwd$'
      # Use private/pkg/osext.Chdir
      - '^os\.Chdir$'
      # Ban debug statements
      - '^fmt\.Print'
      - '^log\.'
      - '^print$'
      - '^println$'
      # Use private/pkg/protoencoding Marshalers and Unmarshalers
      - '^(proto|prototext|protojson|protoyaml).Marshal$'
      - '^(proto|prototext|protojson|protoyaml).Unmarshal$'
      - '^(proto|prototext|protojson|protoyaml).MarshalOptions$'
      - '^(proto|prototext|protojson|protoyaml).UnmarshalOptions$'
  govet:
    enable:
      - nilness
  importas:
    alias:
      - pkg: github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/image/v1
        alias: imagev1
      - pkg: github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/module/v1
        alias: modulev1
      - pkg: github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1
        alias: registryv1alpha1
  nolintlint:
    allow-unused: false
    allow-no-explanation: []
    require-explanation: true
    require-specific: true
linters:
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    # - contextcheck
    - decorder
    # - depguard
    - dogsled
    - errcheck
    - exhaustruct
    - exportloopref
    - forbidigo
    - forcetypeassert
    - gci
    - gochecknoinits
    - gofmt
    - goheader
    # - goimports
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - grouper
    - importas
    - ineffassign
    - loggercheck
    - makezero
    - mirror
    - misspell
    - nakedret
    - nilerr
    - nolintlint
    - nosprintfhostport
    - paralleltest
    - predeclared
    - promlinter
    - reassign
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unused
    - wastedassign
    - whitespace
  disable-all: true
issues:
  exclude-dirs-use-default: false
  exclude-rules:
    # We didn't turn on exhaustruct historically, but we really want to make sure it is turned on
    # for this file, as we do conversion between v1beta1 and v1 registry-proto types.
    - path-except: private/bufpkg/bufmodule/bufmoduleapi/convert.go
      linters:
        - exhaustruct
    - linters:
        - gosec
      # G101 checks for hardcoded credentials, and the variables named "*Password*
      # trip this off.
      path: private/buf/bufcli/env.go
      text: "G101:"
    - linters:
        - gosec
      # G404 checks for use of the ordinary non-CPRNG.
      path: private/buf/buflsp/progress.go
      text: "G404:"
    - linters:
        - gosec
      # G115 checks for use of truncating conversions.
      path: private/buf/buflsp/file.go
      text: "G115:"
    - linters:
        - gosec
      # G115 checks for use of truncating conversions.
      path: private/buf/buflsp/report.go
      text: "G115:"
    - linters:
        - gosec
      # G115 checks for use of truncating conversions.
      path: private/buf/buflsp/server.go
      text: "G115:"
    - linters:
        - gosec
      # G115 checks for use of truncating conversions.
      path: private/buf/buflsp/symbol.go
      text: "G115:"
    - linters:
        - containedctx
      # Type must implement an interface whose methods do not accept context. But this
      # implementation makes RPC calls, which need a context. So we allow creator of the
      # type to provide a context at value creation (instead of using context.Background()).
      path: private/buf/bufcurl/reflection_resolver.go
    - linters:
        - gosec
      # We verify manually so that we can emit verbose output while doing so.
      path: private/buf/bufcurl/tls.go
      text: "G402:"
    - linters:
        - paralleltest
      # This test shouldn't run in parallel as it needs osext.Getwd.
      path: private/buf/buffetch/internal/reader_test.go
      text: "missing the call to method parallel"
    - linters:
        - paralleltest
      # Parallelizing TestPlainPostHandlerTLS and TestPlainPostHandlerH2C
      # makes this test flaky.
      path: private/buf/bufstudioagent/bufstudioagent_test.go
      text: "missing the call to method parallel"
    - linters:
        - paralleltest
      # TestWorkspaceArchiveDir, TestWorkspaceWithInvalidArchivePathFail
      # and TestWorkspaceWithInvalidArchiveAbsolutePathFail cannot run in parallel
      # because they all call createZipFromDir on the same path, writing to the same file.
      path: private/buf/cmd/buf/workspace_test.go
      text: "missing the call to method parallel"
    - linters:
        - forbidigo
      # This is a legacy usage of os.Getwd we're not bothering to port yet.
      path: private/buf/cmd/buf/command/alpha/protoc/protoc_test.go
      text: "os.Getwd"
    - linters:
        - dogsled
      # One function call doesn't care about most of the returned destructured values. The
      # dogsled linter complains about it. (Value of this linter is unclear...)
      path: private/buf/cmd/buf/command/curl/curl.go
    - linters:
        - forbidigo
      # This is a legacy usage of os.Getwd we're not bothering to port yet.
      path: private/buf/cmd/buf/command/generate/generate_test.go
      text: "os.Getwd"
    - linters:
        - gochecknoinits
      # we actually want to use this init to create a protovalidate.Validator
      path: private/bufpkg/bufcas/proto.go
    - linters:
        - staticcheck
      text: "GetIgnoreEmpty is deprecated"
      path: private/bufpkg/bufcheck/bufcheckserver/internal/buflintvalidate/field.go
    - linters:
        - staticcheck
      text: "GetSkipped is deprecated"
      path: private/bufpkg/bufcheck/bufcheckserver/internal/buflintvalidate/field.go
    - linters:
        - gochecknoinits
      # we actually want to use init here
      path: private/bufpkg/bufconfig/module_config.go
    - linters:
        - gosec
      # We don't need a cryptographically secure RNG for these tests, and a
      # deterministic RNG is actually nice for test repeatability.
      path: private/bufpkg/bufimage/bufimageutil/.*_test\.go
      text: "G404:"
    - linters:
        - paralleltest
      # This test shouldn't run in parallel as it allocates a lot of memory.
      path: private/bufpkg/bufimage/build_image_unix_test.go
      text: "missing the call to method parallel"
    - linters:
        - containedctx
      # we actually want to embed a context here
      path: private/bufpkg/bufimage/parser_accessor_handler.go
    - linters:
        - containedctx
      # we actually want to embed a context here
      path: private/bufpkg/bufmodule/module.go
    - linters:
        - containedctx
      # we actually want to embed a context here
      path: private/bufpkg/bufmodule/module_set_builder.go
    - linters:
        - gochecknoinits
      # we actually want to use init here
      path: private/bufpkg/bufmodule/paths.go
    - linters:
        - forbidigo
      # we want to use errgroup here
      path: private/bufpkg/bufremoteplugin/bufremoteplugindocker/docker.go
      text: "use of `errgroup"
    - linters:
        - forbidigo
      # this is one of two files we want to allow exec.Cmd functions in
      path: private/pkg/command/process.go
    - linters:
        - forbidigo
      # this is one of two files we want to allow exec.Cmd functions in
      path: private/pkg/command/runner.go
    - linters:
        - gosec
      # G204 checks that exec.Command is not called with non-constants.
      path: private/pkg/command/runner.go
      text: "G204:"
    - linters:
        - gosec
      # We should be able to use net/http/cgi in a unit test, in addition the CVE mentions
      # only versions of go < 1.6.3 are affected.
      path: private/pkg/git/git_test.go
      text: "G504:"
    - linters:
        - wastedassign
      # netrc/internal is a library largely copied in from an external repository with attribution.
      # We try to make minimal edits.
      path: private/pkg/netrc/internal/internal.go
    - linters:
        - forbidigo
      # We cache os.Getwd in osext, osext is the entrypoint.
      path: private/pkg/osext/osext.go
      text: "os.Getwd"
    - linters:
        - forbidigo
      # We cache os.Getwd in osext, osext has a Chdir that clears the cache.
      path: private/pkg/osext/osext.go
      text: "os.Chdir"
    - linters:
        - gochecknoinits
      # protoencoding calls detrand.Disable via go:linkname and and init function. See the comments
      # in the file for more details.
      path: private/pkg/protoencoding/detrand.go
    - linters:
        - errcheck
      # headers.go has casts with values from contexts that should fail if there
      # is no error, but it would be very unidiomatic to return an error from
      # the functions that do these casts, and we completely control the
      # context values within this file
      path: private/pkg/rpc/headers.go
    - linters:
        - forbidigo
      # we use os.Rename here to rename files in the same directory
      # This is safe (we aren't traversing filesystem boundaries).
      path: private/pkg/storage/storageos/bucket.go
      text: "os.Rename"
    - linters:
        - containedctx
      # we actually want to embed a context here
      path: private/pkg/transport/grpc/grpcclient/client_conn_provider.go
    - linters:
        - forbidigo
      # we actually want to use errgroup when starting an HTTP server
      path: private/pkg/transport/http/httpserver/httpserver.go
    - linters:
        - stylecheck
      text: "ST1005:"
    - linters:
        - gochecknoinits
      # we actually want to use this init
      path: private/usage/usage.go
    - linters:
        - staticcheck
      # We deprecated all the definitions in plugin.proto but we still implement them.
      text: "buf/alpha/registry/v1alpha1/plugin.proto is marked as deprecated"
    - linters:
        - staticcheck
      # We deprecated all the definitions in generate.proto but we still implement them.
      text: "buf/alpha/registry/v1alpha1/generate.proto is marked as deprecated"
    - linters:
        - staticcheck
      # We need to handle this field in descriptor.proto.
      text: "GetDeprecatedLegacyJsonFieldConflicts is deprecated"
    - linters:
        - forcetypeassert
      # This greatly simplifies creation of descriptors, and it's safe enough since
      # it's just test code.
      path: private/bufpkg/bufimage/source_retention_options_test\.go
    - linters:
        - paralleltest
      path: private/buf/cmd/buf/buf_test.go
      # The LsModules tests call chdir and cannot be parallelized.
      text: "LsModules"
    - linters:
        - gosec
      # G101 checks for hardcoded credentials, and the variables named "*Token*
      # trip this off.
      path: private/pkg/oauth2/device.go
      text: "G101:"
    # G115 checks for integer overflow from integer conversions. There are known false
    # positives from the check (https://github.com/securego/gosec/issues/1212) that are
    # actively being worked on. Each exemption below is a false positive or for a safe operation,
    # such as parsing indices from descriptors and/or images.
    - linters:
        - gosec
      # Loop index conversion to uint64.
      path: private/buf/bufgen/features.go
      text: "G115:"
    - linters:
        - gosec
      # Converting result from utf8.RuneCountInString to uint64.
      path: private/bufpkg/bufcheck/bufcheckserver/internal/buflintvalidate/field.go
      text: "G115:"
    - linters:
        - gosec
      # PluginReference revision is validated with a bounds check at construction time.
      path: private/bufpkg/bufremoteplugin/bufremoteplugin.go
      text: "G115:"
    - linters:
        - gosec
      # A bounds check has been added for int32 -> uint32 conversion this is being flagged
      # as a false positive.
      path: private/buf/bufcurl/reflection_resolver.go
      text: "G115:"
    - linters:
        - gosec
      # bufprotosource converts indices to int32 to form the source path. Since it is parsing
      # from the fileDescriptor set, the operation should be safe.
      path: private/bufpkg/bufprotosource/paths.go
      text: "G115:"
    - linters:
        - gosec
      # bufimageutil is handling images and converting loop indices to int32. Since it is
      # parsing from an Image, the operation should be safe.
      path: private/bufpkg/bufimage/bufimageutil/bufimageutil.go
      text: "G115:"
    - linters:
        - gosec
      # Bounds checks have been added with assertion statements to ensure safe int -> int32
      # conversions, this is a false positive.
      path: private/bufpkg/bufprotosource/option_extension_descriptor_test.go
      text: "G115:"
    - linters:
        - gosec
      # This converts results from strconv.ParseInt with the bit size set to 32 to int32,
      # so it should be a safe conversion, this is a false positive.
      path: private/buf/bufprotopluginexec/version.go
      text: "G115:"
    - linters:
        - gosec
      # This checks the cel constraints from an Image, and converts loop indices to int32
      # to set the source path for the location, this operation should be safe.
      path: private/bufpkg/bufcheck/bufcheckserver/internal/buflintvalidate/cel.go
      text: "G115:"
    # No obvious deprecated replacement.
    - linters:
        - staticcheck
      path: private/pkg/protoencoding/reparse_extensions_test.go
      text: "SA1019:"
    # Allow marshal and unmarshal functions in protoencoding only
    - linters:
      - forbidigo
      path: private/pkg/protoencoding
      text: "proto.Marshal"
    - linters:
      - forbidigo
      path: private/pkg/protoencoding
      text: "proto.Unmarshal"
    - linters:
      - forbidigo
      path: private/pkg/protoencoding
      text: "protojson.Marshal"
    - linters:
      - forbidigo
      path: private/pkg/protoencoding
      text: "protojson.Unmarshal"
    - linters:
      - forbidigo
      path: private/pkg/protoencoding
      text: "protoyaml.Marshal"
    - linters:
      - forbidigo
      path: private/pkg/protoencoding
      text: "protoyaml.Unmarshal"
    - linters:
      - forbidigo
      path: private/pkg/protoencoding
      text: "prototext.Marshal"
    - linters:
      - forbidigo
      path: private/pkg/protoencoding
      text: "prototext.Unmarshal"
    - linters:
        - gosec
      # This checks the cel constraints for predefined rules from an Image, and converts loop indices to int32
      # to set the source path for the location, this operation should be safe.
      path: private/bufpkg/bufcheck/bufcheckserver/internal/buflintvalidate/predefined_rules.go
      text: "G115:"
