syntax = "proto3";

package a;

import "buf/validate/validate.proto";
import "google/protobuf/wrappers.proto";

message StringTest {
  // valid
  string no_protovalidate_option = 1;
  // valid
  string other_option = 2 [deprecated = true];
  // valid
  string valid = 3 [
    (buf.validate.field).string.max_len = 20,
    (buf.validate.field).string.max_bytes = 32,
    (buf.validate.field).string.not_in = "foo",
    (buf.validate.field).string.not_in = "bar"
  ];
  // valid
  string valid_const = 4 [(buf.validate.field).string.const = "foo"];
  // valid
  string valid_in = 5 [
    (buf.validate.field).string.in = "foo",
    (buf.validate.field).string.in = "bar"
  ];
  string const = 6 [
    (buf.validate.field).string.max_len = 10,
    // const should be the only field if defined
    (buf.validate.field).string.const = "foo"
  ];
  string in = 7 [
    (buf.validate.field).string.max_len = 10,
    // in should be the only field is defined
    (buf.validate.field).string.in = "foo"
  ];
  string not_in_fail_prefix = 8 [
    (buf.validate.field).string.prefix = "foo",
    // bar does not have prefix foo
    (buf.validate.field).string.not_in = "bar"
  ];
  string not_in_fail_min_len = 9 [
    (buf.validate.field).string.min_len = 10,
    // bar does not have len >= 10
    (buf.validate.field).string.not_in = "bar"
  ];
  string prefix_max_len = 10 [
    (buf.validate.field).string.max_len = 1,
    // prefix length exceeds max_len
    (buf.validate.field).string.prefix = "ab"
  ];
  string suffix_max_len = 11 [
    (buf.validate.field).string.max_len = 1,
    // suffix length exceeds max_len
    (buf.validate.field).string.suffix = "ab"
  ];
  string contains_max_len = 12 [
    (buf.validate.field).string.max_len = 1,
    // contains length exceeds max_len
    (buf.validate.field).string.contains = "ab"
  ];
  string max_len_bytes_conflict = 13 [
    (buf.validate.field).string.max_bytes = 1,
    // max bytes < max len makes max_len redundant
    (buf.validate.field).string.max_len = 2
  ];
  string len_min_len_conflict = 14 [
    (buf.validate.field).string.min_len = 2,
    // len cannot be used with min_len
    (buf.validate.field).string.len = 1
  ];
  string len_max_len_conflict = 15 [
    (buf.validate.field).string.max_len = 1,
    // len cannot be used with max_len
    (buf.validate.field).string.len = 2
  ];
  string min_gt_max_len = 16 [
    // min_len is greater than max_len, the next two lines will be highlighted.
    (buf.validate.field).string.min_len = 2,
    (buf.validate.field).string.max_len = 1
  ];
  // patter [ is invalid
  string regex_pattern_parse = 17 [(buf.validate.field).string.pattern = "["];
  // type mismatch
  string unexpected_type = 18 [(buf.validate.field).int32 = {const: 1}];
  //   string prefix_max_len_bytes_conflict = 19 [
  //     (buf.validate.field).string.max_bytes = 1,
  //     // prefix exceeds max_bytes
  //     (buf.validate.field).string.prefix = "ab"
  //   ];
  //   string suffix_max_len_bytes_conflict = 20 [
  //     (buf.validate.field).string.max_bytes = 1,
  //     // suffix exceeds max_bytes
  //     (buf.validate.field).string.suffix = "ab"
  //   ];
  //   string contains_max_len_bytes_conflict = 21 [
  //     (buf.validate.field).string.max_bytes = 1,
  //     // conatins exceeds max_bytes
  //     (buf.validate.field).string.contains = "ab"
  //   ];
}
