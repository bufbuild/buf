// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go-apiclient. DO NOT EDIT.

package apiclient

import (
	registryv1alpha1apiclient "github.com/bufbuild/buf/private/gen/proto/apiclient/buf/alpha/registry/v1alpha1/registryv1alpha1apiclient"
)

// TokenConfig represents a token configuration for a provider to determine setting auth tokens for outbound requests
type TokenConfig struct {
	// Token is an auth token
	Token string
	// Reader is a function that looks up a token based on the given address
	Reader func(string) (string, error)
	// AuthHeaderKey is the key to use in the request header associated to the auth token
	AuthHeaderKey string
	// AuthPrefix is the prefix to append before the token in the request header
	AuthPrefix string
}

// NewTokenConfig creates a new token config with an explicit token
func NewTokenConfig(headerKey string, prefix string, token string) TokenConfig {
	return TokenConfig{
		Token:         token,
		AuthHeaderKey: headerKey,
		AuthPrefix:    prefix,
	}
}

// NewTokenConfigWithReader creates a new token config with a token reader function
func NewTokenConfigWithReader(headerKey string, prefix string, reader func(string) (string, error)) TokenConfig {
	return TokenConfig{
		Reader:        reader,
		AuthHeaderKey: headerKey,
		AuthPrefix:    prefix,
	}
}

// Provider provides all Providers.
type Provider interface {
	BufAlphaRegistryV1alpha1() registryv1alpha1apiclient.Provider
}
