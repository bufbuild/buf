// Code generated by protoc-gen-go-connectclient. DO NOT EDIT.

package registryv1alpha1connectclient

import (
	context "context"
	registryv1alpha1connect "github.com/bufbuild/buf/private/gen/proto/connect/buf/alpha/registry/v1alpha1/registryv1alpha1connect"
	v1alpha1 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/module/v1alpha1"
	v1alpha11 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1"
	connect_go "github.com/bufbuild/connect-go"
)

type pushServiceClient struct {
	client registryv1alpha1connect.PushServiceClient
}

func newPushServiceClient(
	httpClient connect_go.HTTPClient,
	address string,
	options ...connect_go.ClientOption,
) *pushServiceClient {
	return &pushServiceClient{
		client: registryv1alpha1connect.NewPushServiceClient(
			httpClient,
			address,
			options...,
		),
	}
}

// Push pushes.
func (s *pushServiceClient) Push(
	ctx context.Context,
	owner string,
	repository string,
	branch string,
	module *v1alpha1.Module,
	tags []string,
	tracks []string,
) (localModulePin *v1alpha11.LocalModulePin, _ error) {
	response, err := s.client.Push(
		ctx,
		connect_go.NewRequest(
			&v1alpha11.PushRequest{
				Owner:      owner,
				Repository: repository,
				Branch:     branch,
				Module:     module,
				Tags:       tags,
				Tracks:     tracks,
			}),
	)
	if err != nil {
		return nil, err
	}
	return response.Msg.LocalModulePin, nil
}
