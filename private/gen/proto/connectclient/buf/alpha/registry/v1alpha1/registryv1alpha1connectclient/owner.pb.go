// Code generated by protoc-gen-go-connectclient. DO NOT EDIT.

package registryv1alpha1connectclient

import (
	context "context"
	registryv1alpha1connect "github.com/bufbuild/buf/private/gen/proto/connect/buf/alpha/registry/v1alpha1/registryv1alpha1connect"
	v1alpha1 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1"
	connect_go "github.com/bufbuild/connect-go"
)

type ownerServiceClient struct {
	client registryv1alpha1connect.OwnerServiceClient
}

func newOwnerServiceClient(
	httpClient connect_go.HTTPClient,
	address string,
	options ...connect_go.ClientOption,
) *ownerServiceClient {
	return &ownerServiceClient{
		client: registryv1alpha1connect.NewOwnerServiceClient(
			httpClient,
			address,
			options...,
		),
	}
}

// GetOwnerByName takes an owner name and returns the owner as
// either a user or organization.
func (s *ownerServiceClient) GetOwnerByName(ctx context.Context, name string) (owner *v1alpha1.Owner, _ error) {
	response, err := s.client.GetOwnerByName(
		ctx,
		connect_go.NewRequest(
			&v1alpha1.GetOwnerByNameRequest{
				Name: name,
			}),
	)
	if err != nil {
		return nil, err
	}
	return response.Msg.Owner, nil
}
