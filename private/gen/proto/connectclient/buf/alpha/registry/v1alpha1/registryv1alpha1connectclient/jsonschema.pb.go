// Code generated by protoc-gen-go-connectclient. DO NOT EDIT.

package registryv1alpha1connectclient

import (
	context "context"
	registryv1alpha1connect "github.com/bufbuild/buf/private/gen/proto/connect/buf/alpha/registry/v1alpha1/registryv1alpha1connect"
	v1alpha1 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1"
	connect_go "github.com/bufbuild/connect-go"
)

type jSONSchemaServiceClient struct {
	client registryv1alpha1connect.JSONSchemaServiceClient
}

func newJSONSchemaServiceClient(
	httpClient connect_go.HTTPClient,
	address string,
	options ...connect_go.ClientOption,
) *jSONSchemaServiceClient {
	return &jSONSchemaServiceClient{
		client: registryv1alpha1connect.NewJSONSchemaServiceClient(
			httpClient,
			address,
			options...,
		),
	}
}

// GetJSONSchema allows users to get an (approximate) json schema for a
// protobuf type.
func (s *jSONSchemaServiceClient) GetJSONSchema(
	ctx context.Context,
	owner string,
	repository string,
	reference string,
	typeName string,
) (jsonSchema []byte, _ error) {
	response, err := s.client.GetJSONSchema(
		ctx,
		connect_go.NewRequest(
			&v1alpha1.GetJSONSchemaRequest{
				Owner:      owner,
				Repository: repository,
				Reference:  reference,
				TypeName:   typeName,
			}),
	)
	if err != nil {
		return nil, err
	}
	return response.Msg.JsonSchema, nil
}
