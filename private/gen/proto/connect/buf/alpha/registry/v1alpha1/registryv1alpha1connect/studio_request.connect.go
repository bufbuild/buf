// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: buf/alpha/registry/v1alpha1/studio_request.proto

package registryv1alpha1connect

import (
	context "context"
	errors "errors"
	v1alpha1 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1"
	connect_go "github.com/bufbuild/connect-go"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// StudioRequestServiceName is the fully-qualified name of the StudioRequestService service.
	StudioRequestServiceName = "buf.alpha.registry.v1alpha1.StudioRequestService"
)

// StudioRequestServiceClient is a client for the buf.alpha.registry.v1alpha1.StudioRequestService
// service.
type StudioRequestServiceClient interface {
	// Create registers a favorite Studio requests to the caller's BSR profile.
	Create(context.Context, *connect_go.Request[v1alpha1.CreateRequest]) (*connect_go.Response[v1alpha1.CreateResponse], error)
	// Delete removes a favorite Studio request from the caller's BSR profile.
	Delete(context.Context, *connect_go.Request[v1alpha1.DeleteRequest]) (*connect_go.Response[v1alpha1.DeleteResponse], error)
	// List shows the caller's favorited requests.
	List(context.Context, *connect_go.Request[v1alpha1.ListRequest]) (*connect_go.Response[v1alpha1.ListResponse], error)
}

// NewStudioRequestServiceClient constructs a client for the
// buf.alpha.registry.v1alpha1.StudioRequestService service. By default, it uses the Connect
// protocol with the binary Protobuf Codec, asks for gzipped responses, and sends uncompressed
// requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC() or
// connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewStudioRequestServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) StudioRequestServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &studioRequestServiceClient{
		create: connect_go.NewClient[v1alpha1.CreateRequest, v1alpha1.CreateResponse](
			httpClient,
			baseURL+"/buf.alpha.registry.v1alpha1.StudioRequestService/Create",
			opts...,
		),
		delete: connect_go.NewClient[v1alpha1.DeleteRequest, v1alpha1.DeleteResponse](
			httpClient,
			baseURL+"/buf.alpha.registry.v1alpha1.StudioRequestService/Delete",
			opts...,
		),
		list: connect_go.NewClient[v1alpha1.ListRequest, v1alpha1.ListResponse](
			httpClient,
			baseURL+"/buf.alpha.registry.v1alpha1.StudioRequestService/List",
			opts...,
		),
	}
}

// studioRequestServiceClient implements StudioRequestServiceClient.
type studioRequestServiceClient struct {
	create *connect_go.Client[v1alpha1.CreateRequest, v1alpha1.CreateResponse]
	delete *connect_go.Client[v1alpha1.DeleteRequest, v1alpha1.DeleteResponse]
	list   *connect_go.Client[v1alpha1.ListRequest, v1alpha1.ListResponse]
}

// Create calls buf.alpha.registry.v1alpha1.StudioRequestService.Create.
func (c *studioRequestServiceClient) Create(ctx context.Context, req *connect_go.Request[v1alpha1.CreateRequest]) (*connect_go.Response[v1alpha1.CreateResponse], error) {
	return c.create.CallUnary(ctx, req)
}

// Delete calls buf.alpha.registry.v1alpha1.StudioRequestService.Delete.
func (c *studioRequestServiceClient) Delete(ctx context.Context, req *connect_go.Request[v1alpha1.DeleteRequest]) (*connect_go.Response[v1alpha1.DeleteResponse], error) {
	return c.delete.CallUnary(ctx, req)
}

// List calls buf.alpha.registry.v1alpha1.StudioRequestService.List.
func (c *studioRequestServiceClient) List(ctx context.Context, req *connect_go.Request[v1alpha1.ListRequest]) (*connect_go.Response[v1alpha1.ListResponse], error) {
	return c.list.CallUnary(ctx, req)
}

// StudioRequestServiceHandler is an implementation of the
// buf.alpha.registry.v1alpha1.StudioRequestService service.
type StudioRequestServiceHandler interface {
	// Create registers a favorite Studio requests to the caller's BSR profile.
	Create(context.Context, *connect_go.Request[v1alpha1.CreateRequest]) (*connect_go.Response[v1alpha1.CreateResponse], error)
	// Delete removes a favorite Studio request from the caller's BSR profile.
	Delete(context.Context, *connect_go.Request[v1alpha1.DeleteRequest]) (*connect_go.Response[v1alpha1.DeleteResponse], error)
	// List shows the caller's favorited requests.
	List(context.Context, *connect_go.Request[v1alpha1.ListRequest]) (*connect_go.Response[v1alpha1.ListResponse], error)
}

// NewStudioRequestServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewStudioRequestServiceHandler(svc StudioRequestServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/buf.alpha.registry.v1alpha1.StudioRequestService/Create", connect_go.NewUnaryHandler(
		"/buf.alpha.registry.v1alpha1.StudioRequestService/Create",
		svc.Create,
		opts...,
	))
	mux.Handle("/buf.alpha.registry.v1alpha1.StudioRequestService/Delete", connect_go.NewUnaryHandler(
		"/buf.alpha.registry.v1alpha1.StudioRequestService/Delete",
		svc.Delete,
		opts...,
	))
	mux.Handle("/buf.alpha.registry.v1alpha1.StudioRequestService/List", connect_go.NewUnaryHandler(
		"/buf.alpha.registry.v1alpha1.StudioRequestService/List",
		svc.List,
		opts...,
	))
	return "/buf.alpha.registry.v1alpha1.StudioRequestService/", mux
}

// UnimplementedStudioRequestServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedStudioRequestServiceHandler struct{}

func (UnimplementedStudioRequestServiceHandler) Create(context.Context, *connect_go.Request[v1alpha1.CreateRequest]) (*connect_go.Response[v1alpha1.CreateResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.alpha.registry.v1alpha1.StudioRequestService.Create is not implemented"))
}

func (UnimplementedStudioRequestServiceHandler) Delete(context.Context, *connect_go.Request[v1alpha1.DeleteRequest]) (*connect_go.Response[v1alpha1.DeleteResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.alpha.registry.v1alpha1.StudioRequestService.Delete is not implemented"))
}

func (UnimplementedStudioRequestServiceHandler) List(context.Context, *connect_go.Request[v1alpha1.ListRequest]) (*connect_go.Response[v1alpha1.ListResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("buf.alpha.registry.v1alpha1.StudioRequestService.List is not implemented"))
}
