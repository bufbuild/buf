// Code generated by protoc-gen-go-apiclientgrpc. DO NOT EDIT.

package registryv1alpha1apiclientgrpc

import (
	context "context"
	v1alpha1 "github.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1"
	zap "go.uber.org/zap"
)

type referenceService struct {
	logger          *zap.Logger
	client          v1alpha1.ReferenceServiceClient
	contextModifier func(context.Context) context.Context
}

// GetReferenceByName takes a reference name and returns the
// reference either as a tag, branch, track or commit.
func (s *referenceService) GetReferenceByName(
	ctx context.Context,
	name string,
	owner string,
	repositoryName string,
) (reference *v1alpha1.Reference, _ error) {
	if s.contextModifier != nil {
		ctx = s.contextModifier(ctx)
	}
	response, err := s.client.GetReferenceByName(
		ctx,
		&v1alpha1.GetReferenceByNameRequest{
			Name:           name,
			Owner:          owner,
			RepositoryName: repositoryName,
		},
	)
	if err != nil {
		return nil, err
	}
	return response.Reference, nil
}
