// Copyright 2020-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: buf/alpha/registry/v1alpha1/github.proto

package registryv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GithubAppConfig struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AppId string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GithubAppConfig) Reset() {
	*x = GithubAppConfig{}
	mi := &file_buf_alpha_registry_v1alpha1_github_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GithubAppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubAppConfig) ProtoMessage() {}

func (x *GithubAppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_buf_alpha_registry_v1alpha1_github_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GithubAppConfig) GetAppId() string {
	if x != nil {
		return x.xxx_hidden_AppId
	}
	return ""
}

func (x *GithubAppConfig) SetAppId(v string) {
	x.xxx_hidden_AppId = v
}

type GithubAppConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AppId string
}

func (b0 GithubAppConfig_builder) Build() *GithubAppConfig {
	m0 := &GithubAppConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AppId = b.AppId
	return m0
}

type GetGithubAppConfigRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGithubAppConfigRequest) Reset() {
	*x = GetGithubAppConfigRequest{}
	mi := &file_buf_alpha_registry_v1alpha1_github_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGithubAppConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGithubAppConfigRequest) ProtoMessage() {}

func (x *GetGithubAppConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buf_alpha_registry_v1alpha1_github_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GetGithubAppConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GetGithubAppConfigRequest_builder) Build() *GetGithubAppConfigRequest {
	m0 := &GetGithubAppConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GetGithubAppConfigResponse struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AppConfig *GithubAppConfig       `protobuf:"bytes,1,opt,name=app_config,json=appConfig,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetGithubAppConfigResponse) Reset() {
	*x = GetGithubAppConfigResponse{}
	mi := &file_buf_alpha_registry_v1alpha1_github_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGithubAppConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGithubAppConfigResponse) ProtoMessage() {}

func (x *GetGithubAppConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buf_alpha_registry_v1alpha1_github_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetGithubAppConfigResponse) GetAppConfig() *GithubAppConfig {
	if x != nil {
		return x.xxx_hidden_AppConfig
	}
	return nil
}

func (x *GetGithubAppConfigResponse) SetAppConfig(v *GithubAppConfig) {
	x.xxx_hidden_AppConfig = v
}

func (x *GetGithubAppConfigResponse) HasAppConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AppConfig != nil
}

func (x *GetGithubAppConfigResponse) ClearAppConfig() {
	x.xxx_hidden_AppConfig = nil
}

type GetGithubAppConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AppConfig *GithubAppConfig
}

func (b0 GetGithubAppConfigResponse_builder) Build() *GetGithubAppConfigResponse {
	m0 := &GetGithubAppConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AppConfig = b.AppConfig
	return m0
}

var File_buf_alpha_registry_v1alpha1_github_proto protoreflect.FileDescriptor

const file_buf_alpha_registry_v1alpha1_github_proto_rawDesc = "" +
	"\n" +
	"(buf/alpha/registry/v1alpha1/github.proto\x12\x1bbuf.alpha.registry.v1alpha1\"(\n" +
	"\x0fGithubAppConfig\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\"\x1b\n" +
	"\x19GetGithubAppConfigRequest\"i\n" +
	"\x1aGetGithubAppConfigResponse\x12K\n" +
	"\n" +
	"app_config\x18\x01 \x01(\v2,.buf.alpha.registry.v1alpha1.GithubAppConfigR\tappConfig2\x9c\x01\n" +
	"\rGithubService\x12\x8a\x01\n" +
	"\x12GetGithubAppConfig\x126.buf.alpha.registry.v1alpha1.GetGithubAppConfigRequest\x1a7.buf.alpha.registry.v1alpha1.GetGithubAppConfigResponse\"\x03\x90\x02\x01B\x98\x02\n" +
	"\x1fcom.buf.alpha.registry.v1alpha1B\vGithubProtoP\x01ZYgithub.com/bufbuild/buf/private/gen/proto/go/buf/alpha/registry/v1alpha1;registryv1alpha1\xa2\x02\x03BAR\xaa\x02\x1bBuf.Alpha.Registry.V1alpha1\xca\x02\x1bBuf\\Alpha\\Registry\\V1alpha1\xe2\x02'Buf\\Alpha\\Registry\\V1alpha1\\GPBMetadata\xea\x02\x1eBuf::Alpha::Registry::V1alpha1b\x06proto3"

var file_buf_alpha_registry_v1alpha1_github_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_buf_alpha_registry_v1alpha1_github_proto_goTypes = []any{
	(*GithubAppConfig)(nil),            // 0: buf.alpha.registry.v1alpha1.GithubAppConfig
	(*GetGithubAppConfigRequest)(nil),  // 1: buf.alpha.registry.v1alpha1.GetGithubAppConfigRequest
	(*GetGithubAppConfigResponse)(nil), // 2: buf.alpha.registry.v1alpha1.GetGithubAppConfigResponse
}
var file_buf_alpha_registry_v1alpha1_github_proto_depIdxs = []int32{
	0, // 0: buf.alpha.registry.v1alpha1.GetGithubAppConfigResponse.app_config:type_name -> buf.alpha.registry.v1alpha1.GithubAppConfig
	1, // 1: buf.alpha.registry.v1alpha1.GithubService.GetGithubAppConfig:input_type -> buf.alpha.registry.v1alpha1.GetGithubAppConfigRequest
	2, // 2: buf.alpha.registry.v1alpha1.GithubService.GetGithubAppConfig:output_type -> buf.alpha.registry.v1alpha1.GetGithubAppConfigResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_buf_alpha_registry_v1alpha1_github_proto_init() }
func file_buf_alpha_registry_v1alpha1_github_proto_init() {
	if File_buf_alpha_registry_v1alpha1_github_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_buf_alpha_registry_v1alpha1_github_proto_rawDesc), len(file_buf_alpha_registry_v1alpha1_github_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_buf_alpha_registry_v1alpha1_github_proto_goTypes,
		DependencyIndexes: file_buf_alpha_registry_v1alpha1_github_proto_depIdxs,
		MessageInfos:      file_buf_alpha_registry_v1alpha1_github_proto_msgTypes,
	}.Build()
	File_buf_alpha_registry_v1alpha1_github_proto = out.File
	file_buf_alpha_registry_v1alpha1_github_proto_goTypes = nil
	file_buf_alpha_registry_v1alpha1_github_proto_depIdxs = nil
}
