// Copyright 2020-2021 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: buf/alpha/registry/v1alpha1/scope.proto

package registryv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerScope int32

const (
	ServerScope_SERVER_SCOPE_UNSPECIFIED ServerScope = 0
	ServerScope_SERVER_SCOPE_MEMBER      ServerScope = 1
	ServerScope_SERVER_SCOPE_ADMIN       ServerScope = 2
)

// Enum value maps for ServerScope.
var (
	ServerScope_name = map[int32]string{
		0: "SERVER_SCOPE_UNSPECIFIED",
		1: "SERVER_SCOPE_MEMBER",
		2: "SERVER_SCOPE_ADMIN",
	}
	ServerScope_value = map[string]int32{
		"SERVER_SCOPE_UNSPECIFIED": 0,
		"SERVER_SCOPE_MEMBER":      1,
		"SERVER_SCOPE_ADMIN":       2,
	}
)

func (x ServerScope) Enum() *ServerScope {
	p := new(ServerScope)
	*p = x
	return p
}

func (x ServerScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerScope) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_registry_v1alpha1_scope_proto_enumTypes[0].Descriptor()
}

func (ServerScope) Type() protoreflect.EnumType {
	return &file_buf_alpha_registry_v1alpha1_scope_proto_enumTypes[0]
}

func (x ServerScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerScope.Descriptor instead.
func (ServerScope) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_registry_v1alpha1_scope_proto_rawDescGZIP(), []int{0}
}

type OrganizationScope int32

const (
	OrganizationScope_ORGANIZATION_SCOPE_UNSPECIFIED OrganizationScope = 0
	OrganizationScope_ORGANIZATION_SCOPE_MEMBER      OrganizationScope = 1
	OrganizationScope_ORGANIZATION_SCOPE_ADMIN       OrganizationScope = 2
	OrganizationScope_ORGANIZATION_SCOPE_OWNER       OrganizationScope = 3
)

// Enum value maps for OrganizationScope.
var (
	OrganizationScope_name = map[int32]string{
		0: "ORGANIZATION_SCOPE_UNSPECIFIED",
		1: "ORGANIZATION_SCOPE_MEMBER",
		2: "ORGANIZATION_SCOPE_ADMIN",
		3: "ORGANIZATION_SCOPE_OWNER",
	}
	OrganizationScope_value = map[string]int32{
		"ORGANIZATION_SCOPE_UNSPECIFIED": 0,
		"ORGANIZATION_SCOPE_MEMBER":      1,
		"ORGANIZATION_SCOPE_ADMIN":       2,
		"ORGANIZATION_SCOPE_OWNER":       3,
	}
)

func (x OrganizationScope) Enum() *OrganizationScope {
	p := new(OrganizationScope)
	*p = x
	return p
}

func (x OrganizationScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrganizationScope) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_registry_v1alpha1_scope_proto_enumTypes[1].Descriptor()
}

func (OrganizationScope) Type() protoreflect.EnumType {
	return &file_buf_alpha_registry_v1alpha1_scope_proto_enumTypes[1]
}

func (x OrganizationScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrganizationScope.Descriptor instead.
func (OrganizationScope) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_registry_v1alpha1_scope_proto_rawDescGZIP(), []int{1}
}

type RepositoryScope int32

const (
	RepositoryScope_REPOSITORY_SCOPE_UNSPECIFIED RepositoryScope = 0
	RepositoryScope_REPOSITORY_SCOPE_READ        RepositoryScope = 1
	RepositoryScope_REPOSITORY_SCOPE_READ_WRITE  RepositoryScope = 2
	RepositoryScope_REPOSITORY_SCOPE_ADMIN       RepositoryScope = 3
)

// Enum value maps for RepositoryScope.
var (
	RepositoryScope_name = map[int32]string{
		0: "REPOSITORY_SCOPE_UNSPECIFIED",
		1: "REPOSITORY_SCOPE_READ",
		2: "REPOSITORY_SCOPE_READ_WRITE",
		3: "REPOSITORY_SCOPE_ADMIN",
	}
	RepositoryScope_value = map[string]int32{
		"REPOSITORY_SCOPE_UNSPECIFIED": 0,
		"REPOSITORY_SCOPE_READ":        1,
		"REPOSITORY_SCOPE_READ_WRITE":  2,
		"REPOSITORY_SCOPE_ADMIN":       3,
	}
)

func (x RepositoryScope) Enum() *RepositoryScope {
	p := new(RepositoryScope)
	*p = x
	return p
}

func (x RepositoryScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepositoryScope) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_registry_v1alpha1_scope_proto_enumTypes[2].Descriptor()
}

func (RepositoryScope) Type() protoreflect.EnumType {
	return &file_buf_alpha_registry_v1alpha1_scope_proto_enumTypes[2]
}

func (x RepositoryScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepositoryScope.Descriptor instead.
func (RepositoryScope) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_registry_v1alpha1_scope_proto_rawDescGZIP(), []int{2}
}

var File_buf_alpha_registry_v1alpha1_scope_proto protoreflect.FileDescriptor

var file_buf_alpha_registry_v1alpha1_scope_proto_rawDesc = []byte{
	0x0a, 0x27, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x62, 0x75, 0x66, 0x2e, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2a, 0x5c, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f,
	0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x43,
	0x4f, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x02, 0x2a, 0x92, 0x01, 0x0a, 0x11, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x4f, 0x52,
	0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d,
	0x0a, 0x19, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x43, 0x4f, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1c, 0x0a,
	0x18, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43,
	0x4f, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4f,
	0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x4f, 0x50,
	0x45, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x03, 0x2a, 0x8b, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x1c, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x43, 0x4f, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x19, 0x0a, 0x15, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x43,
	0x4f, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x41, 0x44, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x52,
	0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03, 0x42, 0x97, 0x02, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e,
	0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0a, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62,
	0x75, 0x66, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x3b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x42, 0x41, 0x52, 0xaa, 0x02, 0x1b, 0x42, 0x75, 0x66,
	0x2e, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x1b, 0x42, 0x75, 0x66, 0x5c, 0x41,
	0x6c, 0x70, 0x68, 0x61, 0x5c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x27, 0x42, 0x75, 0x66, 0x5c, 0x41, 0x6c, 0x70,
	0x68, 0x61, 0x5c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x1e, 0x42, 0x75, 0x66, 0x3a, 0x3a, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x3a, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buf_alpha_registry_v1alpha1_scope_proto_rawDescOnce sync.Once
	file_buf_alpha_registry_v1alpha1_scope_proto_rawDescData = file_buf_alpha_registry_v1alpha1_scope_proto_rawDesc
)

func file_buf_alpha_registry_v1alpha1_scope_proto_rawDescGZIP() []byte {
	file_buf_alpha_registry_v1alpha1_scope_proto_rawDescOnce.Do(func() {
		file_buf_alpha_registry_v1alpha1_scope_proto_rawDescData = protoimpl.X.CompressGZIP(file_buf_alpha_registry_v1alpha1_scope_proto_rawDescData)
	})
	return file_buf_alpha_registry_v1alpha1_scope_proto_rawDescData
}

var file_buf_alpha_registry_v1alpha1_scope_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_buf_alpha_registry_v1alpha1_scope_proto_goTypes = []interface{}{
	(ServerScope)(0),       // 0: buf.alpha.registry.v1alpha1.ServerScope
	(OrganizationScope)(0), // 1: buf.alpha.registry.v1alpha1.OrganizationScope
	(RepositoryScope)(0),   // 2: buf.alpha.registry.v1alpha1.RepositoryScope
}
var file_buf_alpha_registry_v1alpha1_scope_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_buf_alpha_registry_v1alpha1_scope_proto_init() }
func file_buf_alpha_registry_v1alpha1_scope_proto_init() {
	if File_buf_alpha_registry_v1alpha1_scope_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buf_alpha_registry_v1alpha1_scope_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buf_alpha_registry_v1alpha1_scope_proto_goTypes,
		DependencyIndexes: file_buf_alpha_registry_v1alpha1_scope_proto_depIdxs,
		EnumInfos:         file_buf_alpha_registry_v1alpha1_scope_proto_enumTypes,
	}.Build()
	File_buf_alpha_registry_v1alpha1_scope_proto = out.File
	file_buf_alpha_registry_v1alpha1_scope_proto_rawDesc = nil
	file_buf_alpha_registry_v1alpha1_scope_proto_goTypes = nil
	file_buf_alpha_registry_v1alpha1_scope_proto_depIdxs = nil
}
