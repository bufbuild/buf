// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: buf/alpha/audit/v1alpha1/role.proto

package auditv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BufAlphaRegistryV1Alpha1ServerRole int32

const (
	BufAlphaRegistryV1Alpha1ServerRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_UNSPECIFIED BufAlphaRegistryV1Alpha1ServerRole = 0
	BufAlphaRegistryV1Alpha1ServerRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_ADMIN       BufAlphaRegistryV1Alpha1ServerRole = 1
	BufAlphaRegistryV1Alpha1ServerRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_MEMBER      BufAlphaRegistryV1Alpha1ServerRole = 2
)

// Enum value maps for BufAlphaRegistryV1Alpha1ServerRole.
var (
	BufAlphaRegistryV1Alpha1ServerRole_name = map[int32]string{
		0: "BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_UNSPECIFIED",
		1: "BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_ADMIN",
		2: "BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_MEMBER",
	}
	BufAlphaRegistryV1Alpha1ServerRole_value = map[string]int32{
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_UNSPECIFIED": 0,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_ADMIN":       1,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_SERVER_ROLE_MEMBER":      2,
	}
)

func (x BufAlphaRegistryV1Alpha1ServerRole) Enum() *BufAlphaRegistryV1Alpha1ServerRole {
	p := new(BufAlphaRegistryV1Alpha1ServerRole)
	*p = x
	return p
}

func (x BufAlphaRegistryV1Alpha1ServerRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BufAlphaRegistryV1Alpha1ServerRole) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[0].Descriptor()
}

func (BufAlphaRegistryV1Alpha1ServerRole) Type() protoreflect.EnumType {
	return &file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[0]
}

func (x BufAlphaRegistryV1Alpha1ServerRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BufAlphaRegistryV1Alpha1ServerRole.Descriptor instead.
func (BufAlphaRegistryV1Alpha1ServerRole) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_role_proto_rawDescGZIP(), []int{0}
}

type BufAlphaRegistryV1Alpha1OrganizationRole int32

const (
	BufAlphaRegistryV1Alpha1OrganizationRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_UNSPECIFIED BufAlphaRegistryV1Alpha1OrganizationRole = 0
	BufAlphaRegistryV1Alpha1OrganizationRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_OWNER       BufAlphaRegistryV1Alpha1OrganizationRole = 1
	BufAlphaRegistryV1Alpha1OrganizationRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_ADMIN       BufAlphaRegistryV1Alpha1OrganizationRole = 2
	BufAlphaRegistryV1Alpha1OrganizationRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_MEMBER      BufAlphaRegistryV1Alpha1OrganizationRole = 3
)

// Enum value maps for BufAlphaRegistryV1Alpha1OrganizationRole.
var (
	BufAlphaRegistryV1Alpha1OrganizationRole_name = map[int32]string{
		0: "BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_UNSPECIFIED",
		1: "BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_OWNER",
		2: "BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_ADMIN",
		3: "BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_MEMBER",
	}
	BufAlphaRegistryV1Alpha1OrganizationRole_value = map[string]int32{
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_UNSPECIFIED": 0,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_OWNER":       1,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_ADMIN":       2,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_ORGANIZATION_ROLE_MEMBER":      3,
	}
)

func (x BufAlphaRegistryV1Alpha1OrganizationRole) Enum() *BufAlphaRegistryV1Alpha1OrganizationRole {
	p := new(BufAlphaRegistryV1Alpha1OrganizationRole)
	*p = x
	return p
}

func (x BufAlphaRegistryV1Alpha1OrganizationRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BufAlphaRegistryV1Alpha1OrganizationRole) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[1].Descriptor()
}

func (BufAlphaRegistryV1Alpha1OrganizationRole) Type() protoreflect.EnumType {
	return &file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[1]
}

func (x BufAlphaRegistryV1Alpha1OrganizationRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BufAlphaRegistryV1Alpha1OrganizationRole.Descriptor instead.
func (BufAlphaRegistryV1Alpha1OrganizationRole) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_role_proto_rawDescGZIP(), []int{1}
}

type BufAlphaRegistryV1Alpha1RepositoryRole int32

const (
	BufAlphaRegistryV1Alpha1RepositoryRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_UNSPECIFIED BufAlphaRegistryV1Alpha1RepositoryRole = 0
	BufAlphaRegistryV1Alpha1RepositoryRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_OWNER       BufAlphaRegistryV1Alpha1RepositoryRole = 1
	BufAlphaRegistryV1Alpha1RepositoryRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_ADMIN       BufAlphaRegistryV1Alpha1RepositoryRole = 2
	BufAlphaRegistryV1Alpha1RepositoryRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_WRITE       BufAlphaRegistryV1Alpha1RepositoryRole = 3
	BufAlphaRegistryV1Alpha1RepositoryRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_READ        BufAlphaRegistryV1Alpha1RepositoryRole = 4
)

// Enum value maps for BufAlphaRegistryV1Alpha1RepositoryRole.
var (
	BufAlphaRegistryV1Alpha1RepositoryRole_name = map[int32]string{
		0: "BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_UNSPECIFIED",
		1: "BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_OWNER",
		2: "BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_ADMIN",
		3: "BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_WRITE",
		4: "BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_READ",
	}
	BufAlphaRegistryV1Alpha1RepositoryRole_value = map[string]int32{
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_UNSPECIFIED": 0,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_OWNER":       1,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_ADMIN":       2,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_WRITE":       3,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_REPOSITORY_ROLE_READ":        4,
	}
)

func (x BufAlphaRegistryV1Alpha1RepositoryRole) Enum() *BufAlphaRegistryV1Alpha1RepositoryRole {
	p := new(BufAlphaRegistryV1Alpha1RepositoryRole)
	*p = x
	return p
}

func (x BufAlphaRegistryV1Alpha1RepositoryRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BufAlphaRegistryV1Alpha1RepositoryRole) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[2].Descriptor()
}

func (BufAlphaRegistryV1Alpha1RepositoryRole) Type() protoreflect.EnumType {
	return &file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[2]
}

func (x BufAlphaRegistryV1Alpha1RepositoryRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BufAlphaRegistryV1Alpha1RepositoryRole.Descriptor instead.
func (BufAlphaRegistryV1Alpha1RepositoryRole) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_role_proto_rawDescGZIP(), []int{2}
}

type BufAlphaRegistryV1Alpha1TemplateRole int32

const (
	BufAlphaRegistryV1Alpha1TemplateRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_UNSPECIFIED BufAlphaRegistryV1Alpha1TemplateRole = 0
	BufAlphaRegistryV1Alpha1TemplateRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_OWNER       BufAlphaRegistryV1Alpha1TemplateRole = 1
	BufAlphaRegistryV1Alpha1TemplateRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_ADMIN       BufAlphaRegistryV1Alpha1TemplateRole = 2
	BufAlphaRegistryV1Alpha1TemplateRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_WRITE       BufAlphaRegistryV1Alpha1TemplateRole = 3
	BufAlphaRegistryV1Alpha1TemplateRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_READ        BufAlphaRegistryV1Alpha1TemplateRole = 4
)

// Enum value maps for BufAlphaRegistryV1Alpha1TemplateRole.
var (
	BufAlphaRegistryV1Alpha1TemplateRole_name = map[int32]string{
		0: "BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_UNSPECIFIED",
		1: "BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_OWNER",
		2: "BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_ADMIN",
		3: "BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_WRITE",
		4: "BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_READ",
	}
	BufAlphaRegistryV1Alpha1TemplateRole_value = map[string]int32{
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_UNSPECIFIED": 0,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_OWNER":       1,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_ADMIN":       2,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_WRITE":       3,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_TEMPLATE_ROLE_READ":        4,
	}
)

func (x BufAlphaRegistryV1Alpha1TemplateRole) Enum() *BufAlphaRegistryV1Alpha1TemplateRole {
	p := new(BufAlphaRegistryV1Alpha1TemplateRole)
	*p = x
	return p
}

func (x BufAlphaRegistryV1Alpha1TemplateRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BufAlphaRegistryV1Alpha1TemplateRole) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[3].Descriptor()
}

func (BufAlphaRegistryV1Alpha1TemplateRole) Type() protoreflect.EnumType {
	return &file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[3]
}

func (x BufAlphaRegistryV1Alpha1TemplateRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BufAlphaRegistryV1Alpha1TemplateRole.Descriptor instead.
func (BufAlphaRegistryV1Alpha1TemplateRole) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_role_proto_rawDescGZIP(), []int{3}
}

type BufAlphaRegistryV1Alpha1PluginRole int32

const (
	BufAlphaRegistryV1Alpha1PluginRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_UNSPECIFIED BufAlphaRegistryV1Alpha1PluginRole = 0
	BufAlphaRegistryV1Alpha1PluginRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_OWNER       BufAlphaRegistryV1Alpha1PluginRole = 1
	BufAlphaRegistryV1Alpha1PluginRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_ADMIN       BufAlphaRegistryV1Alpha1PluginRole = 2
	BufAlphaRegistryV1Alpha1PluginRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_WRITE       BufAlphaRegistryV1Alpha1PluginRole = 3
	BufAlphaRegistryV1Alpha1PluginRole_BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_READ        BufAlphaRegistryV1Alpha1PluginRole = 4
)

// Enum value maps for BufAlphaRegistryV1Alpha1PluginRole.
var (
	BufAlphaRegistryV1Alpha1PluginRole_name = map[int32]string{
		0: "BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_UNSPECIFIED",
		1: "BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_OWNER",
		2: "BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_ADMIN",
		3: "BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_WRITE",
		4: "BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_READ",
	}
	BufAlphaRegistryV1Alpha1PluginRole_value = map[string]int32{
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_UNSPECIFIED": 0,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_OWNER":       1,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_ADMIN":       2,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_WRITE":       3,
		"BUF_ALPHA_REGISTRY_V1_ALPHA1_PLUGIN_ROLE_READ":        4,
	}
)

func (x BufAlphaRegistryV1Alpha1PluginRole) Enum() *BufAlphaRegistryV1Alpha1PluginRole {
	p := new(BufAlphaRegistryV1Alpha1PluginRole)
	*p = x
	return p
}

func (x BufAlphaRegistryV1Alpha1PluginRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BufAlphaRegistryV1Alpha1PluginRole) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[4].Descriptor()
}

func (BufAlphaRegistryV1Alpha1PluginRole) Type() protoreflect.EnumType {
	return &file_buf_alpha_audit_v1alpha1_role_proto_enumTypes[4]
}

func (x BufAlphaRegistryV1Alpha1PluginRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BufAlphaRegistryV1Alpha1PluginRole.Descriptor instead.
func (BufAlphaRegistryV1Alpha1PluginRole) EnumDescriptor() ([]byte, []int) {
	return file_buf_alpha_audit_v1alpha1_role_proto_rawDescGZIP(), []int{4}
}

var File_buf_alpha_audit_v1alpha1_role_proto protoreflect.FileDescriptor

var file_buf_alpha_audit_v1alpha1_role_proto_rawDesc = []byte{
	0x0a, 0x23, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2a,
	0xc7, 0x01, 0x0a, 0x22, 0x42, 0x75, 0x66, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x56, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x34, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x4f,
	0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x32, 0x0a, 0x2e, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x01, 0x12, 0x33, 0x0a, 0x2f, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48,
	0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x31, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x99, 0x02, 0x0a, 0x28, 0x42, 0x75,
	0x66, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x56, 0x31,
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x3a, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x38, 0x0a, 0x34, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x01,
	0x12, 0x38, 0x0a, 0x34, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31,
	0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x4f,
	0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x39, 0x0a, 0x35, 0x42, 0x55,
	0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59,
	0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x4e,
	0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4d, 0x45, 0x4d,
	0x42, 0x45, 0x52, 0x10, 0x03, 0x2a, 0xc5, 0x02, 0x0a, 0x26, 0x42, 0x75, 0x66, 0x41, 0x6c, 0x70,
	0x68, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x56, 0x31, 0x41, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x3c, 0x0a, 0x38, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31,
	0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x36,
	0x0a, 0x32, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4f,
	0x57, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x36, 0x0a, 0x32, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52,
	0x59, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x36,
	0x0a, 0x32, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x35, 0x0a, 0x31, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52,
	0x59, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x04, 0x2a, 0xb9, 0x02,
	0x0a, 0x24, 0x42, 0x75, 0x66, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x56, 0x31, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x36, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x34, 0x0a, 0x30, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f,
	0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48,
	0x41, 0x31, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x34, 0x0a, 0x30, 0x42, 0x55, 0x46, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56,
	0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x34,
	0x0a, 0x30, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x54,
	0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x57, 0x52, 0x49,
	0x54, 0x45, 0x10, 0x03, 0x12, 0x33, 0x0a, 0x2f, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48,
	0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x31, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x4f,
	0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x04, 0x2a, 0xad, 0x02, 0x0a, 0x22, 0x42, 0x75,
	0x66, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x56, 0x31,
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x38, 0x0a, 0x34, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31,
	0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x32, 0x0a, 0x2e, 0x42, 0x55,
	0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59,
	0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49,
	0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x32,
	0x0a, 0x2e, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x50,
	0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x10, 0x02, 0x12, 0x32, 0x0a, 0x2e, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x5f,
	0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f, 0x41, 0x4c, 0x50, 0x48,
	0x41, 0x31, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x31, 0x0a, 0x2d, 0x42, 0x55, 0x46, 0x5f, 0x41, 0x4c,
	0x50, 0x48, 0x41, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x31, 0x5f,
	0x41, 0x4c, 0x50, 0x48, 0x41, 0x31, 0x5f, 0x50, 0x4c, 0x55, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x4f,
	0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x04, 0x42, 0x81, 0x02, 0x0a, 0x1c, 0x63, 0x6f,
	0x6d, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x09, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66,
	0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x42,
	0x41, 0x41, 0xaa, 0x02, 0x18, 0x42, 0x75, 0x66, 0x2e, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x18,
	0x42, 0x75, 0x66, 0x5c, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x5c,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x24, 0x42, 0x75, 0x66, 0x5c, 0x41,
	0x6c, 0x70, 0x68, 0x61, 0x5c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x1b, 0x42, 0x75, 0x66, 0x3a, 0x3a, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x3a, 0x3a, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buf_alpha_audit_v1alpha1_role_proto_rawDescOnce sync.Once
	file_buf_alpha_audit_v1alpha1_role_proto_rawDescData = file_buf_alpha_audit_v1alpha1_role_proto_rawDesc
)

func file_buf_alpha_audit_v1alpha1_role_proto_rawDescGZIP() []byte {
	file_buf_alpha_audit_v1alpha1_role_proto_rawDescOnce.Do(func() {
		file_buf_alpha_audit_v1alpha1_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_buf_alpha_audit_v1alpha1_role_proto_rawDescData)
	})
	return file_buf_alpha_audit_v1alpha1_role_proto_rawDescData
}

var file_buf_alpha_audit_v1alpha1_role_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_buf_alpha_audit_v1alpha1_role_proto_goTypes = []interface{}{
	(BufAlphaRegistryV1Alpha1ServerRole)(0),       // 0: buf.alpha.audit.v1alpha1.BufAlphaRegistryV1Alpha1ServerRole
	(BufAlphaRegistryV1Alpha1OrganizationRole)(0), // 1: buf.alpha.audit.v1alpha1.BufAlphaRegistryV1Alpha1OrganizationRole
	(BufAlphaRegistryV1Alpha1RepositoryRole)(0),   // 2: buf.alpha.audit.v1alpha1.BufAlphaRegistryV1Alpha1RepositoryRole
	(BufAlphaRegistryV1Alpha1TemplateRole)(0),     // 3: buf.alpha.audit.v1alpha1.BufAlphaRegistryV1Alpha1TemplateRole
	(BufAlphaRegistryV1Alpha1PluginRole)(0),       // 4: buf.alpha.audit.v1alpha1.BufAlphaRegistryV1Alpha1PluginRole
}
var file_buf_alpha_audit_v1alpha1_role_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_buf_alpha_audit_v1alpha1_role_proto_init() }
func file_buf_alpha_audit_v1alpha1_role_proto_init() {
	if File_buf_alpha_audit_v1alpha1_role_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buf_alpha_audit_v1alpha1_role_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buf_alpha_audit_v1alpha1_role_proto_goTypes,
		DependencyIndexes: file_buf_alpha_audit_v1alpha1_role_proto_depIdxs,
		EnumInfos:         file_buf_alpha_audit_v1alpha1_role_proto_enumTypes,
	}.Build()
	File_buf_alpha_audit_v1alpha1_role_proto = out.File
	file_buf_alpha_audit_v1alpha1_role_proto_rawDesc = nil
	file_buf_alpha_audit_v1alpha1_role_proto_goTypes = nil
	file_buf_alpha_audit_v1alpha1_role_proto_depIdxs = nil
}
