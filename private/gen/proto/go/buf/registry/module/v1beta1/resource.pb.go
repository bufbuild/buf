// Copyright 2020-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: buf/registry/module/v1beta1/resource.proto

package modulev1beta1

import (
	_ "github.com/bufbuild/buf/private/gen/proto/go/buf/registry/priv/extension/v1beta1"
	_ "github.com/bufbuild/buf/private/gen/proto/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A reference to any of these resources:
//   - Module
//   - Commit
//   - Tag
//   - Branch
//   - VCSCommit
//
// The id or name is resolved to a specific resource.
// If an id is passed, this is interpreted as being the id of the resource.
// If a name is passed, the semantics according to ResourceFullName are applied.
//
// ResourceRefs can only be used in requests, and only for read-only RPCs, that is
// you should not use an arbitrary reference when modifying a specific resource.
type ResourceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Ref:
	//
	//	*ResourceRef_Id
	//	*ResourceRef_Name
	Ref isResourceRef_Ref `protobuf_oneof:"ref"`
}

func (x *ResourceRef) Reset() {
	*x = ResourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_registry_module_v1beta1_resource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRef) ProtoMessage() {}

func (x *ResourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_buf_registry_module_v1beta1_resource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRef.ProtoReflect.Descriptor instead.
func (*ResourceRef) Descriptor() ([]byte, []int) {
	return file_buf_registry_module_v1beta1_resource_proto_rawDescGZIP(), []int{0}
}

func (m *ResourceRef) GetRef() isResourceRef_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (x *ResourceRef) GetId() string {
	if x, ok := x.GetRef().(*ResourceRef_Id); ok {
		return x.Id
	}
	return ""
}

func (x *ResourceRef) GetName() *ResourceFullName {
	if x, ok := x.GetRef().(*ResourceRef_Name); ok {
		return x.Name
	}
	return nil
}

type isResourceRef_Ref interface {
	isResourceRef_Ref()
}

type ResourceRef_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type ResourceRef_Name struct {
	Name *ResourceFullName `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*ResourceRef_Id) isResourceRef_Ref() {}

func (*ResourceRef_Name) isResourceRef_Ref() {}

// The fully-qualified name component of a ResourceRef.
//
// See the documentation on ResourceRef for more details.
//
// The following semantics are applied:
//   - If the child oneof is not specified, the name is interpreted to reference a Module.
//   - If branch_name is specified, the name is interpreted to reference a Branch.
//   - If tag_name is specified, the name is interpreted to reference a Tag.
//   - If vcs_commit_hash is specified, the name is interpeted to reference a VCSCommit.
//   - If ref is specified, it is interpreted to be either an id or name.
//   - If an id, this is equivalent to setting the id field on ResourceRef. However,
//     backends can choose to validate that the owner and module fields match the resource
//     referenced, as additional validation.
//   - If a name, this is interpreted to be either a Branch name, Tag name,
//     or VCSCommit hash.
//   - If there is a conflict between names across resources (for example, there is a
//     Branch and Tag with the same name), the following order of precedence is applied:
//   - Commit
//   - VCSCommit
//   - Tag
//   - Branch
//
// ResourceFullNames can only be used in requests, and only for read-only RPCs, that is
// you should not use an arbitrary reference when modifying a specific resource.
type ResourceFullName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner  string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Module string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	// Types that are assignable to Child:
	//
	//	*ResourceFullName_BranchName
	//	*ResourceFullName_TagName
	//	*ResourceFullName_VcsCommitHash
	//	*ResourceFullName_Ref
	Child isResourceFullName_Child `protobuf_oneof:"child"`
}

func (x *ResourceFullName) Reset() {
	*x = ResourceFullName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_registry_module_v1beta1_resource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceFullName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceFullName) ProtoMessage() {}

func (x *ResourceFullName) ProtoReflect() protoreflect.Message {
	mi := &file_buf_registry_module_v1beta1_resource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceFullName.ProtoReflect.Descriptor instead.
func (*ResourceFullName) Descriptor() ([]byte, []int) {
	return file_buf_registry_module_v1beta1_resource_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceFullName) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ResourceFullName) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (m *ResourceFullName) GetChild() isResourceFullName_Child {
	if m != nil {
		return m.Child
	}
	return nil
}

func (x *ResourceFullName) GetBranchName() string {
	if x, ok := x.GetChild().(*ResourceFullName_BranchName); ok {
		return x.BranchName
	}
	return ""
}

func (x *ResourceFullName) GetTagName() string {
	if x, ok := x.GetChild().(*ResourceFullName_TagName); ok {
		return x.TagName
	}
	return ""
}

func (x *ResourceFullName) GetVcsCommitHash() string {
	if x, ok := x.GetChild().(*ResourceFullName_VcsCommitHash); ok {
		return x.VcsCommitHash
	}
	return ""
}

func (x *ResourceFullName) GetRef() string {
	if x, ok := x.GetChild().(*ResourceFullName_Ref); ok {
		return x.Ref
	}
	return ""
}

type isResourceFullName_Child interface {
	isResourceFullName_Child()
}

type ResourceFullName_BranchName struct {
	BranchName string `protobuf:"bytes,3,opt,name=branch_name,json=branchName,proto3,oneof"`
}

type ResourceFullName_TagName struct {
	TagName string `protobuf:"bytes,4,opt,name=tag_name,json=tagName,proto3,oneof"`
}

type ResourceFullName_VcsCommitHash struct {
	VcsCommitHash string `protobuf:"bytes,5,opt,name=vcs_commit_hash,json=vcsCommitHash,proto3,oneof"`
}

type ResourceFullName_Ref struct {
	Ref string `protobuf:"bytes,6,opt,name=ref,proto3,oneof"`
}

func (*ResourceFullName_BranchName) isResourceFullName_Child() {}

func (*ResourceFullName_TagName) isResourceFullName_Child() {}

func (*ResourceFullName_VcsCommitHash) isResourceFullName_Child() {}

func (*ResourceFullName_Ref) isResourceFullName_Child() {}

var File_buf_registry_module_v1beta1_resource_proto protoreflect.FileDescriptor

var file_buf_registry_module_v1beta1_resource_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x62, 0x75,
	0x66, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x33, 0x62, 0x75, 0x66, 0x2f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x2f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x0b, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x75, 0x66,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x3a, 0x07, 0xc2, 0x48, 0x04, 0x08, 0x01, 0x18, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65,
	0x66, 0x22, 0x88, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72, 0x03, 0x18,
	0xff, 0x01, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01,
	0x01, 0x72, 0x03, 0x18, 0xff, 0x01, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2b,
	0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x18, 0xff, 0x01, 0x48, 0x00, 0x52,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x74,
	0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x72, 0x03, 0x18, 0xff, 0x01, 0x48, 0x00, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0f, 0x76, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x72, 0x03, 0x18, 0xff, 0x01, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x63, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x66, 0x3a, 0x07, 0xc2, 0x48, 0x04, 0x08,
	0x01, 0x18, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x42, 0x97, 0x02, 0x0a,
	0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x42, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75,
	0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f,
	0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x42, 0x52, 0x4d, 0xaa,
	0x02, 0x1b, 0x42, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca, 0x02, 0x1b,
	0x42, 0x75, 0x66, 0x5c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x27, 0x42, 0x75,
	0x66, 0x5c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5c, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1e, 0x42, 0x75, 0x66, 0x3a, 0x3a, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buf_registry_module_v1beta1_resource_proto_rawDescOnce sync.Once
	file_buf_registry_module_v1beta1_resource_proto_rawDescData = file_buf_registry_module_v1beta1_resource_proto_rawDesc
)

func file_buf_registry_module_v1beta1_resource_proto_rawDescGZIP() []byte {
	file_buf_registry_module_v1beta1_resource_proto_rawDescOnce.Do(func() {
		file_buf_registry_module_v1beta1_resource_proto_rawDescData = protoimpl.X.CompressGZIP(file_buf_registry_module_v1beta1_resource_proto_rawDescData)
	})
	return file_buf_registry_module_v1beta1_resource_proto_rawDescData
}

var file_buf_registry_module_v1beta1_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_buf_registry_module_v1beta1_resource_proto_goTypes = []interface{}{
	(*ResourceRef)(nil),      // 0: buf.registry.module.v1beta1.ResourceRef
	(*ResourceFullName)(nil), // 1: buf.registry.module.v1beta1.ResourceFullName
}
var file_buf_registry_module_v1beta1_resource_proto_depIdxs = []int32{
	1, // 0: buf.registry.module.v1beta1.ResourceRef.name:type_name -> buf.registry.module.v1beta1.ResourceFullName
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_buf_registry_module_v1beta1_resource_proto_init() }
func file_buf_registry_module_v1beta1_resource_proto_init() {
	if File_buf_registry_module_v1beta1_resource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_buf_registry_module_v1beta1_resource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_registry_module_v1beta1_resource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceFullName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_buf_registry_module_v1beta1_resource_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ResourceRef_Id)(nil),
		(*ResourceRef_Name)(nil),
	}
	file_buf_registry_module_v1beta1_resource_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ResourceFullName_BranchName)(nil),
		(*ResourceFullName_TagName)(nil),
		(*ResourceFullName_VcsCommitHash)(nil),
		(*ResourceFullName_Ref)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buf_registry_module_v1beta1_resource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buf_registry_module_v1beta1_resource_proto_goTypes,
		DependencyIndexes: file_buf_registry_module_v1beta1_resource_proto_depIdxs,
		MessageInfos:      file_buf_registry_module_v1beta1_resource_proto_msgTypes,
	}.Build()
	File_buf_registry_module_v1beta1_resource_proto = out.File
	file_buf_registry_module_v1beta1_resource_proto_rawDesc = nil
	file_buf_registry_module_v1beta1_resource_proto_goTypes = nil
	file_buf_registry_module_v1beta1_resource_proto_depIdxs = nil
}
