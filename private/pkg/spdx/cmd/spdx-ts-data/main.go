// Copyright 2020-2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"bytes"
	"context"
	"encoding/json"
	"strings"

	"github.com/bufbuild/buf/private/pkg/app"
	"github.com/bufbuild/buf/private/pkg/app/appcmd"
	"github.com/bufbuild/buf/private/pkg/spdx"
	"github.com/spf13/cobra"
)

const (
	programName = "spdx-ts-data"
)

func main() {
	appcmd.Main(context.Background(), newCommand())
}

func newCommand() *appcmd.Command {
	return &appcmd.Command{
		Use:  programName,
		Args: cobra.NoArgs,
		Run:  run,
	}
}

func run(ctx context.Context, container app.Container) error {
	licenseInfos, err := spdx.GetLicenseInfos(ctx)
	if err != nil {
		return err
	}
	data, err := getTSFileData(ctx, licenseInfos)
	if err != nil {
		return err
	}
	_, err = container.Stdout().Write(data)
	return err
}

func getTSFileData(
	ctx context.Context,
	licenseInfos []*spdx.LicenseInfo,
) ([]byte, error) {
	buffer := bytes.NewBuffer(nil)
	_, _ = buffer.WriteString(`// Code generated by ` + programName + `. DO NOT EDIT.

export const LICENSES = {
`)

	for _, licenseInfo := range licenseInfos {
		id, err := json.Marshal(licenseInfo.ID)
		if err != nil {
			return nil, err
		}
		name, err := json.Marshal(licenseInfo.Name)
		if err != nil {
			return nil, err
		}
		_, _ = buffer.WriteString(`	"` + strings.ToLower(licenseInfo.ID) + `": {
		ID: ` + string(id) + ` as const,
		name: ` + string(name) + ` as const,
	},
`)
	}

	_, _ = buffer.WriteString(`}
`)
	return buffer.Bytes(), nil
}
