name: ci
on: push
# Prevent writing to the repository using the CI token.
# Ref: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#permissions
permissions: read-all
env:
  MAKEFLAGS: '-j 2'
jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup-go
        if: success()
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.0
      - name: cache
        if: success()
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/buf/${{ runner.os }}/x86_64/bin
            ~/.cache/buf/${{ runner.os }}/x86_64/go/pkg/mod
            ~/.cache/buf/${{ runner.os }}/x86_64/include
            ~/.cache/buf/${{ runner.os }}/x86_64/versions
          key: ${{ runner.os }}-buf-lint-${{ hashFiles('**/go.sum', 'make/**') }}
          restore-keys: |
            ${{ runner.os }}-buf-lint-
      - name: make-lint
        if: success()
        run: make lint
        env:
          BUF_BREAKING_AGAINST_INPUT: 'https://github.com/bufbuild/buf.git#branch=main'
          BUF_INPUT_HTTPS_USERNAME: ${{ github.actor }}
          BUF_INPUT_HTTPS_PASSWORD: ${{ github.token }}
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup-go
        if: success()
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.0
      - name: cache
        if: success()
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/buf/${{ runner.os }}/x86_64/bin
            ~/.cache/buf/${{ runner.os }}/x86_64/go/pkg/mod
            ~/.cache/buf/${{ runner.os }}/x86_64/include
            ~/.cache/buf/${{ runner.os }}/x86_64/versions
          key: ${{ runner.os }}-buf-test-${{ hashFiles('**/go.sum', 'make/**') }}
          restore-keys: |
            ${{ runner.os }}-buf-test-
      - name: make-test
        if: success()
        run: make test
  docker:
    runs-on: ubuntu-20.04
    needs:
      - lint
      - test
    # This job only runs when
    # 1. The previous lint and test jobs have completed successfully
    # 2. The repository is not a fork, i.e. it will only run on the official bufbuild/buf
    # 3. The workflow run is trigged by main branch OR a tag with v prefix
    # See https://github.com/bufbuild/buf/pull/289/files#r596207623 for the discussion
    if:  ${{ success() && github.repository == 'bufbuild/buf' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/v')) }}
    steps:
      # qemu is used when executing things like `apk` in the final build
      # stage which must execute on the target platform. We currently do
      # not have any CGO and care should be taken in the Dockerfile to ensure
      # that go cross compilation happens on the build platform.
      - name: setup-qemu
        uses: docker/setup-qemu-action@v1
        id: qemu
        with:
          # alpine image doesn't support linux/riscv64
          platforms: linux/386,linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/ppc64le,linux/s390x
      - name: setup-docker-buildx
        uses: docker/setup-buildx-action@v1
      - name: login-docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: set-tag
        # See the following links for setting job outputs
        # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idoutputs
        # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-output-parameter
        id: tag
        run: |
          if echo "${GITHUB_REF}" | grep ^refs/heads/main$ >/dev/null; then
            echo ::set-output name=tag::latest
          elif echo "${GITHUB_REF}" | grep ^refs/tags/v >/dev/null; then
            echo ::set-output name=tag::"$(echo "${GITHUB_REF}" | sed "s/refs\/tags\/v//")"
          fi
      - name: docker-build-push
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.buf
          platforms: ${{ steps.qemu.outputs.platforms }}
          push: true
          tags: |
            bufbuild/buf:latest
            bufbuild/buf:${{ steps.tag.outputs.tag }}
